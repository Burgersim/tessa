# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
}

interface AbstractService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    type: String!
}

interface AudioService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    type: String!
}

interface ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

interface EmbedsService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    type: String!
}

interface FormsService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    type: String!
}

interface ImageService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    type: String!
}

interface LinksService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    type: String!
}

interface LiveVideoService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    type: String!
}

interface RBMNVideo_Resource {
    "MIME type of the resource"
    mimeType: String
    "Mediabase resource type"
    resourceType: String
    "Resource URL"
    url: String
}

interface SocialService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    type: String!
}

interface VideoResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    "A list of text blocks containing textual event information. Not all elements may be presented to the user by default. Kepp the first textualAretfactContainer consise (recommended less than 250 chars)"
    description: [AttributeTextualArtefactContainer]
    "The id of the resource"
    id: ID!
    "Video is a European Work according to the following guideline: https://digital-strategy.ec.europa.eu/en/policies/european-works - information patched by rbmn service"
    isEuropeanWork: Boolean
    "If set to true, embedding should not be offered for this asset. Used for exclusive content that should only live on redbull.com"
    noEmbedding: Boolean
    preferredStyling: ContentStyling
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    "The partner who sponsored the creation of a content piece (financial or other support)"
    sponsoredBy(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesponsoredBy,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Available subtitle-languages for the video asset in [RFC 5646](https://tools.ietf.org/html/rfc5646) notation. E.g. `en`, `en-US`, etc."
    subtitleLanguages: [String]
    trackingDimensions: JSON
    "The type of the resource"
    type: String!
    videoDurationSeconds: Int
    "Reference to video archive for playback (e.g. mediabase RBMN API)"
    videoEssence: VideoService
    "Aspect ratio of the video-frame (width / height)"
    videoFrameAspectRatio: Float
    videoMarkers: [VideoChapterMarkers]!
}

interface VideoService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    type: String!
}

union ActionTargetTypes = AcastPodcast | AttributeReferenceLink | AttributeWebLink | BracketsEmbed | BrightcoveVRVideo | CloudinaryImage | EventBriteCheckout | FacebookFollow | FacebookPost | Giphy | InstagramEmbed | InstagramFollow | JotForm | MediabaseDeliveryAgentClips | MixcloudAudio | PixleeEmbed | RBMNAudio | RBMNLive | RBMNVideo | RedBullTVLinearStream | RedBullTVLiveVideostream | RedBullTVVideo | RiddleEmbed | ServusTVLiveVideo | ServusTVVideo | Snapchat | SoundcloudAudio | SoundcloudSocialLink | Spotify | SpotifySocialLink | SpreakerAudio | ThingImage | TikTokEmbed | TikTokSocialLink | TwitchLiveVideo | TwitchSocialLink | TwitterFollow | TwitterTweetEmbed | VKVideo | VimeoVideo | YoutubeSocialLink | YoutubeVideo

union AudioResources = RbmnAudioEssenceMpeg

union Author = AttributeText | Judge | PersonProfile | Photographer

"Styling options for redbull.com"
union ContentStyling = HeaderMediaStyle

union DynamicRowUnion = AttributeText | PersonProfile

union KeyValue_ValueUnion = AttributeText

union MultipleAttributeTextJudgePersonProfileUnionType = AttributeText | Judge | PersonProfile

"Styling options for redbull.com"
union ParagraphStyling = ParagraphImageGalleryStyle | ParagraphImageStyle

union ParagraphUnion = AcastPodcast | AttributeEnumeration | AttributeInfoSnippet | AttributeQuestionAndAnswers | AttributeQuote | AttributeRelatedContentContainer | AttributeResultsTable | AttributeTable | AttributeTextualArtefactContainer | AudioClip | AudioEpisode | BracketsEmbed | EnergyDrink | EpisodeVideo | ExternalContent | FacebookFollow | FacebookPost | Film | Giphy | GroupProfile | Image | ImageGallery | InstagramEmbed | InstagramFollow | JotForm | Judge | LiveVideo | MixcloudAudio | PartnerProfile | PersonProfile | Photographer | PixleeEmbed | ProjectProfile | RecapVideo | RedBullTVLiveVideostream | RedBullTVVideo | ResultsAndStandings | RiddleEmbed | ServusTVLiveVideo | ServusTVVideo | Snapchat | SoundcloudAudio | Spotify | Story | TeamProfile | ThingImage | TikTokEmbed | TrailerVideo | TwitchLiveVideo | TwitterFollow | TwitterTweetEmbed | VKVideo | Video | Video360 | VimeoVideo | YoutubeVideo

union PersonProfileOrTextUnion = AttributeText | PersonProfile

union QuoteAuthor = AttributeText | Judge | PersonProfile | Photographer

union RelatedContentContainerUnion = AudioEpisode | AudioSeries | ContentCollection | EnergyDrink | EpisodeVideo | EventProfile | EventSeries | ExternalContent | Film | GroupProfile | Image | ImageGallery | Judge | LiveVideo | Location | PartnerProfile | PersonProfile | Photographer | ProjectProfile | RecapVideo | ResultsAndStandings | Show | Story | TeamProfile | TrailerVideo | Video | Video360

union ResultsTableAndTableUnion = AttributeResultsTable | AttributeTable

union TableRowUnion = AttributeText | AttributeTextualArtefactContainer

union TextualArtefactContainerUnion = AttributeDateTime | AttributeLocation | AttributeReferenceLink | AttributeText | AttributeWebLink

union VideoChapterMarkers = ChapterMarker | ReferenceMarker | ResourceMarker

"Add a Acast embed"
type AcastPodcast implements AbstractService & AudioService & EmbedsService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    type: String!
    "Acast embed URL (https://embed.acast.com/redbulletin/thereboundqueen)"
    url: String!
}

"A call for a given action, e.g. to whach a video, follow a facebook user or to buy a ticket (through an web-link)"
type AttributeCallToAction {
    "When does the callToAction end, may be used to display a countdown"
    actionEndDateTime: AttributeDateTime
    "An additional text describing why an action should be taken."
    actionMotivationDescription: AttributeDateTime @deprecated(reason: "warn")
    "Time from when the call to action is available"
    actionStartDateTime: AttributeDateTime
    actionTargets: [ActionTargetTypes]
    "The action type allows consumers to distinguish and/or cluster certain actions based on their intent."
    actionType: String
    labelLong: String @deprecated(reason: "warn")
    "The short label may be used on action buttons, etc."
    labelShort: String
    type: String!
}

"Add a variation of an attribute for a specific context (e.g. if used in a social media context)"
type AttributeContextualTextAttribute {
    featured: AttributeText
    seo: AttributeText
    social: AttributeText
    type: String!
}

"Store a date"
type AttributeDate {
    "A date string in format 'YYYY-MM-DD'."
    date: String!
    type: String!
}

"Date-time"
type AttributeDateTime {
    "The DateTime Attribute dateTimeLocal"
    dateTimeLocal: String
    "The DateTime Attribute dateTimeUTC"
    dateTimeUTC: String!
    "The DateTime Attribute dateTimeLocal"
    isDateOnly: Boolean
    "The DateTime Attribute targetTimezone"
    targetTimezone: String
    type: String!
}

"Create a list / numbered list of text blocks"
type AttributeEnumeration {
    "The enumerationType in the enumeration."
    enumerationType: Enumerations!
    "The items in the enumeration."
    items: [EnumerationItem]!
    type: String!
}

"Points to an entity of another application (e.g. to reference the source of a tag that originates in MEPPConnect)"
type AttributeExternalReference {
    foreignId: String!
    origin: String!
    type: String!
}

"Fact"
type AttributeFact {
    "The fact, e.g. for \"favourite ice cream\" this could be set to \"Vanilla\"."
    fact: AttributeTextualArtefactContainer!
    "Fact label, e.g. \"Favourite ice cream\"."
    factAbout: AttributeText!
    type: String!
}

"Additional pieces of information that enrich a (e.g.) story with catchy facts"
type AttributeInfoSnippet {
    author: Author
    label: String
    text: AttributeTextualArtefactContainer!
    type: String!
}

"Stores multiple key-value pairs e.g. to store theming configuration"
type AttributeKeyValue {
    "Stores multiple key-value pairs e.g. to store theming configuration"
    elements(
        "Only return values for specified keys"
        keys: [String]
    ): [KeyValue_Item]
    type: String!
}

"Location data"
type AttributeLocation {
    "A textual name of the City."
    city: String
    "Two letter country code according to ISO-3166-1 alpha-2 standard"
    countryCode: String
    "A textual name of the country, e.g. Austria, Germany"
    countryName: String
    "Location flag url"
    flagUrl(
        "Flag resolution"
        resolution: FlagResolutionEnum
    ): String
    "Formatted textual address"
    formattedAddress: String
    "The geo-coordinates for the location"
    geoLocation: GeoLocation
    "The postal code for the location"
    postalCode: String
    precision: String!
    state: String
    "The short code of a state, e.g. NY for NewYork"
    stateCode: String
    type: String!
}

"A paragraph stores text-block, other embedded content resources (such as videos, image-galleries, etc.) or services"
type AttributeParagraph {
    contents: [ParagraphUnion]!
    emphasize: Boolean!
    preferredStyling: ParagraphStyling
    title: String
    type: String!
}

"A paragraph container holds multiple paragraphs. This can be used to store content for a story body"
type AttributeParagraphContainer {
    "The Paragraph Container Attribute Contents"
    contents: [AttributeParagraph!]!
    type: String!
}

"Consists of 1 question and 1-n answers to it. Connect multiple to form interviews."
type AttributeQuestionAndAnswers {
    "One or more answers from the interviewees"
    answers: [AttributeQuote]
    "Question posed by the interviewer."
    question: AttributeQuote
    type: String!
}

"Repeat words from a text or speech written or spoken by another person"
type AttributeQuote {
    "Quote author."
    author: QuoteAuthor
    "The quoted text."
    quoteText: AttributeTextualArtefactContainer!
    type: String!
}

"Link to another content resource"
type AttributeReferenceLink {
    markup: [String]
    reference: ContentResource
    text: String!
    type: String!
}

"Add inline related content with or without a label for the container"
type AttributeRelatedContentContainer {
    contents: [RelatedContentContainerUnion!]!
    label: String
    type: String!
}

"A table that allows to display information about results using typed columns"
type AttributeResultsTable {
    "Results table column"
    columns: [AttributesResultsTableColumn!]!
    "Results table rows"
    rows: [AttributesResultsTableRow!]!
    "Specific results table title"
    title: AttributeText!
    type: String!
}

"Add a sub-page (editorial container)"
type AttributeSubPage {
    label: String!
    subPage: EventDetail!
    type: String!
}

"Add a textual table with rows and columns"
type AttributeTable {
    "Table caption."
    caption: AttributeText
    "Table cells."
    cells: [AttributesTableCell]
    "Table columns."
    columns: [AttributesTableColumn]
    type: String!
}

"A table container holds multiple tables."
type AttributeTableContainer {
    "The table-container attributes"
    contents: [ResultsTableAndTableUnion!]!
    type: String!
}

"A text attribute"
type AttributeText {
    "The optional Text Attribute markup"
    markup: [String]
    "The Text Attribute text"
    text: String!
    type: String!
}

"A textual artefact containting text, external links, links to resources, etc."
type AttributeTextualArtefactContainer {
    "The TextualArtefactContainer Attribute contents"
    contents: [TextualArtefactContainerUnion]
    type: String!
}

"Add a time-table e.g. for an event"
type AttributeTimeTable {
    type: String!
}

"Track record"
type AttributeTrackRecord {
    "List of achieved records."
    records: [TrackRecordRecords]!
    type: String!
}

"Link to another website"
type AttributeWebLink {
    "The Web Link Attribute href"
    href: String!
    "True if the href was automatically generated and not editorially set"
    isGenerated: Boolean
    "The optional Web Link Attribute markup"
    markup: [String]
    "The Web Link Attribute text"
    text: String!
    type: String!
}

"Store a year"
type AttributeYear {
    type: String!
    "Calendar year."
    year: Int!
}

type AttributesResultsTableColumn {
    "A string value specifying a format to add context to the result"
    formatHint: String
    "Specific column id"
    name: String!
    "Boolean to define whether a column should be pinned/highlighted"
    pinned: Boolean!
    "The column title"
    title: AttributeText!
}

type AttributesResultsTableRow {
    "Contains the cell values of the non-predefined columns."
    additionalRowCells: [DynamicRow!]!
    "Containing non-predefined rows with value of type text or person profile"
    additionalRows: [DynamicRow!]! @deprecated(reason: "Naming is misleading. Please, use field \"additionalRowCells\" instead.")
    "Column containing main result in text form"
    mainResult: AttributeText!
    "Column containing person reference or free text"
    person: PersonProfileOrTextUnion
    "Column containing rank in text form"
    rank: AttributeText!
}

type AttributesTableCell {
    cellContent: TableRowUnion!
    column: AttributesTableColumn
    row: AttributesTableRow
}

type AttributesTableColumn {
    "Column ID from 0=first to n=last column."
    colId: Int!
    "The column title / label."
    title: AttributeText
}

type AttributesTableRow {
    "Row ID, from 0=first to n=last row in table."
    rowId: Int!
}

"An unlisted audio piece, including for example short interviews, race recaps or first person experiences during an event"
type AudioClip implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Reference to audio source"
    essence: RBMNAudio
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    "Transcript of the audio clip"
    transcript(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorAudioCliptranscript,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): EventDetail
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions describing where the specific resource should NOT be used."
    usageRestrictions: [String]
}

"An episode of an audio series (either a podcast series or a radio show)"
type AudioEpisode implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    body: AttributeParagraphContainer
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The episode number of this episode (e.g. `1`)"
    episodeNumber: Int
    "Reference to audio source"
    essence: AudioService
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "A list of persons who are hosting the episode"
    hosts: [MultipleAttributeTextJudgePersonProfileUnionType]
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "The season the episode belongs to"
    season(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorAudioEpisodeseason,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): AudioSeason
    "The season number of this episode (e.g. `1`). This field is inherited from the season attached through the `season` relationship"
    seasonNumber: Int
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    "Transcript of the audio file"
    transcript(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorAudioEpisodetranscript,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): EventDetail
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

"Subgroup of connected podcast or radio episodes related to an audio series"
type AudioSeason implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "All episodes of the season"
    episodes(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorAudioSeasonepisodes,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [AudioEpisode]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "The numerical season number (used for sorting on season)"
    seasonNumber: Int
    "The series the season belongs to"
    series(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorAudioSeasonseries,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): AudioSeries
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

"Connected set of podcast or radio episodes"
type AudioSeries implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    "A list of text blocks containing textual event information. Not all elements may be presented to the user by default. Keep the first textualAretfactContainer consise (recommended less than 250 chars)"
    description: [AttributeTextualArtefactContainer]
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    episodes(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorAudioSeriesepisodes,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [AudioEpisode]
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "A list of persons who are hosting the series"
    hosts: [MultipleAttributeTextJudgePersonProfileUnionType]
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    language: AttributeText
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    preview(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorAudioSeriespreview,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): AudioEpisode
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    seasons(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorAudioSeriesseasons,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [AudioSeason]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    subType: String
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

"Used to embed brackets from the Bracket Editor"
type BracketsEmbed implements AbstractService & EmbedsService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    id: String!
    type: String!
}

type BrightcoveVRVideo implements AbstractService & EmbedsService & VideoService {
    allowEmbedding: Boolean!
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    refId: String!
    type: String!
}

"Video chapter marker with title"
type ChapterMarker {
    timestamp: String
    timestampInSeconds: Int
    title: AttributeText!
}

type CloudinaryImage implements AbstractService & EmbedsService & ImageService {
    "Cropping advice for specific aspect ratios"
    aspectRatios: [CloudinaryImageaspectRatiosArrayItems]
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "The cloudinary URL to the image. Replace the `{op}` placeholder with the desired cloudinary image transformation parameters"
    imageURL: String!
    "Predominant color of the image. Can be used to calculate complementary color."
    predominantColor: String
    "Predominant colors of the image. Can be used to highlight some overlaying text."
    predominantColors: [CloudinaryImagepredominantColorsArrayItems]
    "The raw dimension of the image"
    raw: JSONObject!
    type: String!
}

type CloudinaryImageaspectRatiosArrayItems {
    "Cropping advice for specific aspect ratios"
    cropping: [CloudinaryImageaspectRatioscroppingArrayItems]
    "Cropping advice for specific aspect ratios"
    imageURL: String
    "Cropping advice for specific aspect ratios"
    predominantColor: String
    "Cropping advice for specific aspect ratios"
    ratio: Float!
    "Cropping advice for specific aspect ratios"
    ratioTextual: String!
    "Cropping advice for specific aspect ratios"
    raw: JSONObject
}

type CloudinaryImageaspectRatioscroppingArrayItems {
    "Two coordinates on the image which should be used to crop the desired asepct ratio."
    left: Int!
    "Two coordinates on the image which should be used to crop the desired asepct ratio."
    top: Int!
}

type CloudinaryImagepredominantColorsArrayItems {
    "Predominant colors of the image. Can be used to highlight some overlaying text."
    hexColorCode: String!
    "Predominant colors of the image. Can be used to highlight some overlaying text."
    percentage: Float!
}

"A product commercial of RedBull, e.g. a link to a RedBull cartoons clip."
type Commercial implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "The URL to the external resource"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

"A content collection aggregates content based on tags content was tagged with."
type ContentCollection implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    "If set to true, content-collection will be automatically assigned to all content resources which match the tag-selection criteria (includeContentTaggedWith-excludeContentTaggedWith). The content collection is assigned through the relationship `contentCollections` on content resources. Assigned content collections are shown through labels on cards / content pages and allow for navigating back to the collection itself."
    autoAssign: Boolean
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "Editorial collections are populated manually with content through the featuring-app"
    editorial: Boolean @deprecated(reason: "Editorial collections will be moved to playlist and editorial-list type.")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Content tagged with these tags or it's children will be excluded from the content collection."
    excludeContentTaggedWith(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentCollectionexcludeContentTaggedWith,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "If content is tagged with these tags or its children will be inlcuded in the content collection."
    includeContentTaggedWith(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentCollectionincludeContentTaggedWith,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    label: String
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "List of tags through which content is assigned to this content collection. Content tagged with any of these tags will become a member of the content collection. This relationship is calculated automatically and will contain the tags and children-tags of includeContentTaggedWith. All tags and children-tags of excludeContentTaggedWith will be subtracted."
    mappedTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentCollectionmappedTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    "Groups content collections into sub categories, e.g. collections for disciplines, mindsets, etc."
    subType: String
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

type ContentResourceEdge {
    cursor: String!
    node: ContentResource
}

"System metadata about content resources"
type ContentResourceMetaData {
    "User or system that initally created a resource"
    createdBy: String
    "DateTime when a resources was created"
    dateCreated: String
    "DateTime when a resources was last changed. Every change to a resource results in a new dateUpdated"
    dateUpdated: String
    "Reference to external applications (e.g. if the asset was imported)"
    externalReference: AttributeExternalReference
    "Foreign keys of this asset in other systems (e.g. if the asset was imported / links to media asset system)"
    foreignKeys: [String] @deprecated(reason: "This property will be removed anytime soon. However, the information won't be lost but migrated to `externalReference`")
    "The language the resource is written in"
    language: String
    "The locale of the resource."
    locale: String
    "Indicator if resource is published."
    published: Boolean
    "The region or country the resource was published for (e.g. INT for intenational region, AT for Austria)"
    region: String
    "Content-spaces a resource is assigned to"
    spaces: [String]
    "User or system that updated the resource the last time"
    updatedBy: String
}

type DynamicRow {
    "Specific column id"
    name: String!
    "Value containing text or person profile"
    value: DynamicRowUnion
}

"An editorial collection content resources for a given topic"
type EditorialList implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

"Profile for an edition of the Red Bull Energy Drink e.g. Red Bull Winter Edition"
type EnergyDrink implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    "Branding color associated to its edition in HEX code."
    brandingHexColorCode: String
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Indicates the flavour tag on the can."
    flavour: String
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

type EnumerationItem {
    item: AttributeTextualArtefactContainer
    label: String
}

"An episode of a show"
type EpisodeVideo implements ContentResource & VideoResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    "A list of text blocks containing textual event information. Not all elements may be presented to the user by default. Kepp the first textualAretfactContainer consise (recommended less than 250 chars)"
    description: [AttributeTextualArtefactContainer]
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The episode number of this episode (e.g. `1`)"
    episodeNumber: Int
    "All extras such as videos or trailer-videos for an episode-video. Set automatically as bi-directional relationship."
    extras(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorEpisodeVideoextras,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Video is a European Work according to the following guideline: https://digital-strategy.ec.europa.eu/en/policies/european-works - information patched by rbmn service"
    isEuropeanWork: Boolean
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "If `true` video is currently playable, if `false` video may be shown but cannot be played (e.g. episode is only teased)"
    isPlayable: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    "If set to true, embedding should not be offered for this asset. Used for exclusive content that should only live on redbull.com"
    noEmbedding: Boolean
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    "The playability end date from which an asset should no longer be playable (if missing, the asset is playable open end)"
    playabilityEnd: AttributeDateTime
    "The playability start date from which an asset becomes playable. (If missing the asset as playable)"
    playabilityStart: AttributeDateTime
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "The season the episode belongs to. If not set, episode is not structured into seasons."
    season(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorEpisodeVideoseason,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Season
    "The season number of this episode (e.g. `1`). This field is inherited from the seaon attached through the `season` relationship"
    seasonNumber: Int
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "The partner who sponsored the creation of a content piece (financial or other support)"
    sponsoredBy(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesponsoredBy,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    "Available subtitle-languages for the video asset in [RFC 5646](https://tools.ietf.org/html/rfc5646) notation. E.g. `en`, `en-US`, etc."
    subtitleLanguages: [String]
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
    videoDurationSeconds: Int
    "Reference to video archive for playback (e.g. mediabase RBMN API)"
    videoEssence: VideoService
    "Aspect ratio of the video-frame (width / height)"
    videoFrameAspectRatio: Float
    videoMarkers: [VideoChapterMarkers]!
}

"Embed an EventBrite checkout form"
type EventBriteCheckout implements AbstractService & EmbedsService & FormsService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "The ID of an EventBrite Event"
    eventId: String!
    type: String!
}

"Used to store details about events (e.g. press and media information, FAQ, event-rules)"
type EventDetail implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    body: AttributeParagraphContainer
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

"An event-profile hightlights an event"
type EventProfile implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    "A list of text blocks containing textual event information. Not all elements may be presented to the user by default. Kepp the first textualAretfactContainer consise (recommended less than 250 chars)"
    description: [AttributeTextualArtefactContainer]
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "End date & time of an event"
    endDate: AttributeDateTime
    "A list of text blocks containing textual event information. Not all elements may be presented to the user by default. Kepp the first textualAretfactContainer consise (recommended less than 250 chars)"
    eventDescription: [AttributeTextualArtefactContainer] @deprecated(reason: "warn")
    "A list of paragraphs containing detail information about an event (e.g. FAQ, venue info, etc.)"
    eventDetails: AttributeParagraphContainer @deprecated(reason: "no-write")
    "An time-table for a single event"
    eventTimeTable: AttributeTimeTable
    "All extras for an event-profile such as video-clips, trailers or recaps. Set automatically as bi-directional relationship."
    extras(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorEventProfileextras,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    isHostedByRedBull: Boolean
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "The (short) label for an event-profile if shown together with the season or series. E.g. `Lenzerheide, Switzerland` for an event-profile which is part of the event-season `UCI MTB World Championships 2018`"
    label: String
    "RB2 content ID."
    legacyContentId: String
    "An editorially ordered list of all live-streams available for this event."
    live(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorEventProfilelive,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [LiveVideo]
    "Primary live stream (also included in `live`), set in the LiveOps tool"
    livePrimary(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorEventProfilelivePrimary,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): LiveVideo
    "The live status of the event across all attached live-streams. Only available if an event is actually live-streamed (through live-videos attached in live relationship)"
    liveStatus: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    "Athletes or artists participating at an event"
    participatingPersons(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorEventProfileparticipatingPersons,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Teams participating at an event"
    participatingTeams(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorEventProfileparticipatingTeams,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pressAndMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorEventProfilepressAndMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): EventDetail
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "id of a RBTV live stream"
    rbtvLiveStreamId: String
    recap(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorEventProfilerecap,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [RecapVideo]
    "A set of related content containers for highlighting content about an event (e.g. history, top videos, etc.)"
    relatedContentContainers: [AttributeRelatedContentContainer]
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    results(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorEventProfileresults,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): EventDetail
    rules(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorEventProfilerules,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): EventDetail
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "The event-season an event-profile belongs to."
    season(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorEventProfileseason,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): EventSeason
    "The event series an event-profile belongs to. Relationship is set automatically from series attached to season if left black."
    series(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorEventProfileseries,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): EventSeries
    "This contains links to the social media profiles of the event"
    socialLinks: [SocialService]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "This contains social media embeds for this event"
    socialWall: [EmbedsService]
    "Official sponsor(s) of an event"
    sponsoredBy(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorEventProfilesponsoredBy,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Start date and time of an event"
    startDate: AttributeDateTime
    "A canceled event will not take place at all A confirmed event will take place on the date shown on the event A postponed event still has the original date shown and the new event date is undecided A rescheduled event has a new date decided and shown on the event An unconfirmed event does not have a decided date. No date is shown on the event"
    status: String
    "If provided the message is displayed next to the status and is supposed to provide additional information (e.g. Postponed due to bad weather. More details coming soon.)"
    statusMessage: String
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    "Attach multiple subpages (e.g. for adding rules, press-and-media, etc.)"
    subPages: [AttributeSubPage]
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
    "Link to website"
    website: AttributeWebLink
}

"An event season. (e.g. UCI MTB Worldcup 2018)"
type EventSeason implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    "A list of text blocks containing textual season information. Not all elements may be presented to the user by default. Kepp the first textualAretfactContainer consise (recommended less than 250 chars)"
    description: [AttributeTextualArtefactContainer]
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "All events of the season"
    events(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorEventSeasonevents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [EventProfile]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "The label of the season, e.g. `2018`. Shown on tabs."
    label: String
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "The numerical season number (used for sorting) E.g. `2018`"
    seasonNumber: Int
    "The event-series the event-season belongs to."
    series(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorEventSeasonseries,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): EventSeries
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

"An event-series groups a list of event-poriles"
type EventSeries implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    "A list of text blocks containing textual information about an event-series. Not all elements may be presented to the user by default. Kepp the first textualAretfactContainer consise as it may be shown as a stand-first (recommended less than 250 chars)"
    description: [AttributeTextualArtefactContainer]
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "End date & time of an event-series"
    endDate: AttributeDateTime
    "All event-profiles (single events) of this event-series. Set automatically as bi-directional relationship."
    events(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorEventSeriesevents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [EventProfile]
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "All event-seasons of this event-series if series is structured into multiple seasons. Set automatically as bi-directional relationship."
    seasons(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorEventSeriesseasons,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [EventSeason]
    "This contains links to the social media profiles of the event-series"
    socialLinks: [SocialService]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "This contains social media embeds for this event series"
    socialWall: [EmbedsService]
    "Start date and time of an event-series"
    startDate: AttributeDateTime
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    "Attach multiple subpages (e.g. for adding rules, press-and-media, etc.)"
    subPages: [AttributeSubPage]
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    "Timeline for an event-series, e.g. to capture historical milestones"
    trackRecord: AttributeTrackRecord
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
    "Link to website"
    website: AttributeWebLink
}

"A reference to a content resource not stored in the content repo. Has a fully qualified URL instead of an uriSlug"
type ExternalContent implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "The URL to the external resource"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

"Add a facebook profile, event or page to follow"
type FacebookFollow implements AbstractService & LinksService & SocialService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "What is the facebook enitity type behind the follow URL"
    facebookEntityType: String!
    "e.g. https://www.facebook.com/redbull/"
    href: String!
    type: String!
}

"Embed a facebook post"
type FacebookPost implements AbstractService & EmbedsService & SocialService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    facebookEntityType: String!
    "URL of Facebook post to embed. See https://developers.facebook.com/docs/plugins/embedded-posts#how-to-get-a-posts-url"
    href: String!
    type: String!
}

type FeedFieldCounts {
    "Document count by content collection."
    contentCollections: [FeedFieldKeyCount]
    "Document count by country code."
    locationCountryCode: [FeedFieldKeyCount]
    "Document count by space."
    meta_spaces: [FeedFieldKeyCount]
    "Document count by type."
    type: [FeedFieldKeyCount]
}

type FeedFieldKeyCount {
    count: Int
    "Content resource id used to aggregate by"
    key: String
    resource: ContentCollection
}

"A film"
type Film implements ContentResource & VideoResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    "A list of text blocks containing textual event information. Not all elements may be presented to the user by default. Kepp the first textualAretfactContainer consise (recommended less than 250 chars)"
    description: [AttributeTextualArtefactContainer]
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "All extras for a video such as video-clips or trailers. Set automatically as bi-directional relationship."
    extras(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorFilmextras,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Video is a European Work according to the following guideline: https://digital-strategy.ec.europa.eu/en/policies/european-works - information patched by rbmn service"
    isEuropeanWork: Boolean
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "If `true` video is currently playable, if `false` video may be shown but cannot be played (e.g. film is only teased)"
    isPlayable: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    "If set to true, embedding should not be offered for this asset. Used for exclusive content that should only live on redbull.com"
    noEmbedding: Boolean
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    "The playability end date from which an asset should no longer be playable (if missing, the asset is playable open end)"
    playabilityEnd: AttributeDateTime
    "The playability start date from which an asset becomes playable. (If missing the asset as playable)"
    playabilityStart: AttributeDateTime
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "The partner who sponsored the creation of a content piece (financial or other support)"
    sponsoredBy(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesponsoredBy,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    "Available subtitle-languages for the video asset in [RFC 5646](https://tools.ietf.org/html/rfc5646) notation. E.g. `en`, `en-US`, etc."
    subtitleLanguages: [String]
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
    "Legth of the film in seconds. May not be set if the film is not yet playable / available."
    videoDurationSeconds: Int
    "Reference to media asset delivery system for the video-file. May be not available if a film is only featured but not playable."
    videoEssence: VideoService
    "Aspect ratio of the video-frame (width / height)"
    videoFrameAspectRatio: Float
    videoMarkers: [VideoChapterMarkers]!
}

"A link to a game microsite, e.g. a RedBull cartoons game."
type Games implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "The URL to the external resource"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

type GeoLocation {
    lat: Float!
    long: Float!
    metresAboveSeaLevel: Float
}

"Embed a video clip from Giphy"
type Giphy implements AbstractService & EmbedsService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "The Giphy ID (e.g. feqkVgjJpYtjy)"
    id: String!
    type: String!
}

"A profile for a group of person-profiles (e.g. band or a team)"
type GroupProfile implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Several facts about the group (e.g. motto)"
    facts: [AttributeFact]
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    isSponsored: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "My relationship description"
    members(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorGroupProfilemembers,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PersonProfile]
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "This contains links to the social media profiles of the group (e.g. band or a team)"
    socialLinks: [SocialService]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    "Group-profiles can be differentiated between bands and teams (in sports)"
    subType: String
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackRecord: AttributeTrackRecord
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
    "Link to group's website"
    website: AttributeWebLink
}

"Styling options for header media on redbull.com"
type HeaderMediaStyle {
    id: String
    type: String
    variation: String
}

"An image resource"
type Image implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    credits: String
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    imageEssence: ImageService
    "If set to true, the image itself has the title of the image burned in. Used e.g. for logos that sometimes have the title of the logo in the logo itself."
    imageEssenceContainsCaption: Boolean
    "Get the image URL for an image in the correct size"
    imageSrc(aspectRatio: Float, height: Int = 100, mode: ImageModes, width: Int = 150): String
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    subType: String
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

"Image galleries group a list of images into one slideshow"
type ImageGallery implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Images of the image gallery"
    images(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorImageGalleryimages,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

"Embed an instagram post"
type InstagramEmbed implements AbstractService & EmbedsService & SocialService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    hideCaption: Boolean!
    "URL of Instagram post. Open an image on instagram and copy the URL from your browser."
    href: String!
    type: String!
}

"Add an instagram follow button"
type InstagramFollow implements AbstractService & LinksService & SocialService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "e.g. `https://www.instagram.com/redbull/`"
    href: String!
    type: String!
}

"Add a form from JotForm"
type JotForm implements AbstractService & EmbedsService & FormsService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "JotForm ID (e.g. 80421851676358)"
    jotFormId: String!
    type: String!
}

"A person who is part of a judging panel, consisting of renowned experts that are voting in Red Bull competitions - e.g. Red Bull Illume judges."
type Judge implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    "Biography with details of the persons background, achievements, and history."
    biography: [AttributeTextualArtefactContainer]
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    "Discipline the judge is judging as an expert for. E.g: Photography, Landscape Photography"
    disciplines: [String]
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The family name of the judge."
    familyName: String
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "The first name of the judge."
    givenName: String
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "This contains links to the social media profiles of the judge."
    socialLinks: [SocialService]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
    "Link to external website. E.g. the judge's personal website."
    website: AttributeWebLink
}

type KeyValue_Item {
    "A key, which is a unique identifier for the corresponding data"
    key: String
    "A value, which holds the data"
    value: KeyValue_ValueUnion
}

"A live video-stream"
type LiveVideo implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    "A list of text blocks containing textual event information. Not all elements may be presented to the user by default. Kepp the first textualAretfactContainer consise (recommended less than 250 chars)"
    description: [AttributeTextualArtefactContainer]
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The planned end-date of the stream"
    endDate: AttributeDateTime
    "All events in which this live-stream is referenced through the live relationship."
    events(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorLiveVideoevents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [EventProfile]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Live-Video is a European Work according to the following guideline: https://digital-strategy.ec.europa.eu/en/policies/european-works - information patched by rbmn service"
    isEuropeanWork: Boolean
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "Used to identify which live-stream to highlight if multiple live-streams are available (e.g. for an event) Used for the header section of an live-streamed event-profile (only one can be shown, but multiple streams might be attached to the event-profile) Throughout the life of an live-streamed event, the primary live stream may change multiple times."
    isPrimary: Boolean @deprecated(reason: "This flag is deprecated in favor of relations on event-profiles")
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "The start date/time of the livestream"
    startDate: AttributeDateTime
    "The status of the stream."
    status: String
    "An editorially set status label which should be used instead of the status enum if set. Used e.g. to indicate that a stream is `broadcasted` (fake-live)."
    statusLabel: String
    "An editorially set status message for the status of the live stream (e.g. `waiting for the swell` or `delayed due to weather conditions`)"
    statusMessage: String
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
    "Duration of the live video stream if the stream is already over."
    videoDurationSeconds: Int
    "Reference to an asset in the media asset management system (e.g. Mediabase RBMN API)"
    videoEssence: LiveVideoService
    "Aspect ratio of the video-frame (width / height)"
    videoFrameAspectRatio: Float
}

type Locale {
    "The primary web URL for this locale."
    baseWebURL: String
    "Locale flag url"
    flagUrl(
        "Flag resolution"
        resolution: FlagResolutionEnum
    ): String
    "The id of the resource"
    id: ID!
    "The language of the locale"
    language: String
    "The locale in the format la-REG (e.g.: \"en-US\")"
    locale: String!
    "The locales from which content is fetched. First element is primary locale, remaining locales are used to fill up feed."
    localeMixingStrategy: [String]
    "The region (e.g. \"US\" or \"MEA\")"
    region: String!
    "The type of the resource"
    type: String!
}

"A location stores information about an event-locaiton or a venue"
type Location implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    "The location data"
    location: AttributeLocation
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

"Mediabase delivery agent for video preview clips"
type MediabaseDeliveryAgentClips implements AbstractService & EmbedsService & VideoService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    renditions: [MediabaseDeliveryAgentClipsrenditionsArrayItems]
    type: String!
}

type MediabaseDeliveryAgentClipsrenditionsArrayItems {
    clipURL: String!
    height: Float!
    kBitPerSecond: Float
    ratio: Float!
    ratioTextual: String!
    width: Float!
}

"Embed a mixcloud track"
type MixcloudAudio implements AbstractService & AudioService & EmbedsService & SocialService {
    assetType: String
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "The URL of a mixcloud track"
    href: String!
    type: String!
}

type PageInfo {
    hasNextPage: Boolean
}

"Styling options for image galleries in paragraphs on redbull.com"
type ParagraphImageGalleryStyle {
    displayType: String
    id: String
    type: String
}

"Styling options for images in paragraphs on redbull.com"
type ParagraphImageStyle {
    id: String
    orientation: String
    size: String
    type: String
}

"A profile of a partner, e.g. an event sponsor or team sponsor"
type PartnerProfile implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "URL to the partners website"
    href: AttributeWebLink
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

"Stores information about an athlete or artist"
type PersonProfile implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    backdropMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorPersonProfilebackdropMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "A biography of an athlete or person. The first textual-artefact-container may be rendered as stand first."
    biography: [AttributeTextualArtefactContainer]
    birthDate: AttributeDate
    callToActions: [AttributeCallToAction]
    "The year in which the athlete started his/her career."
    careerStart: AttributeYear
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    "Sport or culture disciplines the athlete / artist focus on. E.g. `free climbing`, `BMX flatland`, `fighting games`"
    disciplines: [String]
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Several facts about the athlete (label / fact)"
    facts: [AttributeFact]
    familyName: String
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    gender: String
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    givenName: String
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    isSponsored: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    nickName: String
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    "This image is used to strengthen the brand connection to the athlete/artist. It should contain a drink scene or can in hand. Image will be used on Products & Company. Make sure it's cleared via your local Brand manager."
    productRelatedImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorPersonProfileproductRelatedImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "A quote from the person regarding Red Bull products. E.g. `I drink Red Bull right after the race to keep the energy up`"
    productRelatedQuote: AttributeText
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "A favourite quote from the person. E.g. `I give 100% ... day and night.`"
    quote: AttributeText
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "This contains links to the social media profiles of the person (e.g. athlete or artist)"
    socialLinks: [SocialService]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "This contains social media embeds from this person (e.g. athlete or artist)"
    socialWall: [EmbedsService]
    "A list of random facts about the athlete"
    softFacts: AttributeEnumeration
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    subType: String
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackRecord: AttributeTrackRecord
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
    "Link to personal website"
    website: AttributeWebLink
}

"Stores information about a photographer."
type Photographer implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    "Illume photographer biography with details of their background, achievements, and history."
    biography: [AttributeTextualArtefactContainer]
    "The date on which the photographer was born."
    birthDate: AttributeDate
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    "Discipline the judge is judging as an expert for. E.g: Photography, Landscape Photography."
    disciplines: [String]
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The family name of the photographer."
    familyName: String
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "The first name of the photographer."
    givenName: String
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    "Year(s) in which the photographer has submitted a participation for Red Bull Illume."
    participatedYears: [AttributeYear]
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "This contains links to the social media profiles of the photographer."
    socialLinks: [SocialService]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "A list of random facts about the photographer."
    softFacts: AttributeEnumeration
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    "A timeline of achievements by the photographer. Can have a supporting description and year."
    trackRecord: AttributeTrackRecord
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
    "External link to e.g. a photographer's website."
    website: AttributeWebLink
}

"Embed a pixlee social embed to embed e.g. instagram walls"
type PixleeEmbed implements AbstractService & EmbedsService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    type: String!
    widgetId: String!
}

"An editorial collection of videos for playback"
type Playlist implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

type PodcastPlatform {
    "Platform name"
    platform: String!
    "Information on whether the podcast is submitted, not submitted, approved or rejected on this platform"
    status: String
    url: String
}

"A short preview clip (e.g. giphy / mp4)"
type PreviewClip implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "The reference to the preview-clip delivery service"
    clipEssence: VideoService
    "Get the video URL for a preview clip in the correct size"
    clipSrc(height: Int = 100, width: Int = 150): String
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

"Ongoing content projects without a specific location / start and end-date. (e.g. kaleidoscope)"
type ProjectProfile implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    description: [AttributeTextualArtefactContainer]
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    "Athletes or artists participating in a project"
    participatingPersons(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorProjectProfileparticipatingPersons,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PersonProfile]
    "Teams participating in a project"
    participatingTeams(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorProjectProfileparticipatingTeams,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    relatedContentContainers: [AttributeRelatedContentContainer]
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "This contains links to the social media profiles of the project"
    socialLinks: [SocialService]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "This contains social media embeds for this event"
    socialWall: [EmbedsService]
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    "Attach multiple subpages (e.g. for adding rules, press-and-media, etc.)"
    subPages: [AttributeSubPage]
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
    "Link to website"
    website: AttributeWebLink
}

"Query"
type Query {
    "Fetch a feed of content resources by using a query or a redbull.com URL"
    feed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Disable usage restrictions like no-standalone-display or geo-blocking"
        disableUsageRestrictions: Boolean,
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale."
        enforceGeoBlocking: Boolean = true,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Specify the locales of content resources for elements in the feed. The locale-mixing strategy is applied in order, hence, content resources available in multiple locales will only be returned in one locale (the first one locale in the locale-mixing strategy will win)"
        localeMixing: [String],
        "Specify a search term for fulltext-search."
        q: String,
        "Will only return resources that are related to the given context resource."
        relatedTo: String,
        "Specify the context object(s) for the scoring function"
        score: FeaturingRecordForScoringFunction,
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "Comma separated list of properties by which to sort the results"
        sort: [FeedSort],
        "List of spaces from which content should be returned. By default spaces redbull_com, rbtv, redbullmusic are selected."
        spaces: [String],
        url: String
    ): QueryFeedConnection
    "Get locales"
    locales(
        "Add filter for filtering on locale, language or region"
        filter: LocalesFilter
    ): [Locale]
    "Get a content-resource by id"
    resource(
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale."
        enforceGeoBlocking: Boolean = true,
        id: String!,
        includeDraft: Boolean,
        includeUnpublished: Boolean,
        "Specify the locales of content resources for elements in the feed. The locale-mixing strategy is applied in order, hence, content resources available in multiple locales will only be returned in one locale (the first one locale in the locale-mixing strategy will win)"
        localeMixing: [String]
    ): ContentResource
    "Get a list of content-resources by id"
    resources(
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale."
        enforceGeoBlocking: Boolean = true,
        ids: [String!]!,
        includeDraft: Boolean,
        includeUnpublished: Boolean,
        "Specify the locales of content resources for elements in the feed. The locale-mixing strategy is applied in order, hence, content resources available in multiple locales will only be returned in one locale (the first one locale in the locale-mixing strategy will win)"
        localeMixing: [String]
    ): [ContentResource]
    videoMarkers(
        "Video marker resource id"
        id: String!,
        "Include video markers that have not been confirmed by the user"
        includeUnconfirmedMarkers: Boolean = false
    ): VideoMarker
}

type QueryFeedConnection {
    edges: [ContentResourceEdge]
    "Get document counts by type or by space for a feed."
    fieldCounts: FeedFieldCounts
    pageInfo: PageInfo
    totalCount: Int
}

"Audio hosted on Content Hub and served through the Sparkle API"
type RBMNAudio implements AbstractService & AudioService {
    VIN: String!
    assetId: String!
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "Essence containing additional information to the audio track"
    audio: RbmnAudioEssence
    type: String!
}

"RBMN Live Stream Asset"
type RBMNLive implements AbstractService & EmbedsService & LiveVideoService & VideoService {
    "Video identification number from mediabase Media Network Content Hub catalogue (e.g. MI201802070142)"
    VIN: String!
    "AA ID of a mediabase asset"
    assetId: String
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "The chapter according to the LSC tree"
    chapter: String
    "Geo-locations referenced with the video-clip"
    geoLocations: [String]
    "The iTunes ID for a video asset"
    iTunesId: String
    "The label according to the LSC tree"
    label: String
    "The main characters of the video asset"
    mainCharacters: [String] @deprecated(reason: "Field is no longer available")
    "The maturity rating of a video asset according to MPAA rating scheme"
    maturityRating: String
    "On which mediabase environment is the asset available (if not set, production is assumed)"
    mbEnvironment: String
    "Asset metadata"
    meta: RbmnAssetMetadata
    "Persons appearing in a video-clip"
    persons: [String]
    "RBMN API Resource (mp4, keyframes, hls)"
    resources: [RBMNVideo_Resource]
    "Playability and visibility dates set for this resource"
    scheduleLifecycle: RBMNVideo_ScheduleLifecycle @deprecated(reason: "Field is no longer available")
    "The season according to the LSC tree"
    season: String
    "Supporting roles in the video"
    supportingRole: [String] @deprecated(reason: "Field is no longer available")
    type: String!
    "The year the video has been produced"
    yearOfProduction: String
}

"Video served through the RedBull sparkle API (mediabase / cs.liiift.io)"
type RBMNVideo implements AbstractService & EmbedsService & VideoService {
    VIN: String!
    "AA ID of a mediabase asset"
    assetId: String
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "The chapter according to the LSC tree"
    chapter: String
    "Geo-locations referenced with the video-clip"
    geoLocations: [String]
    hideCornerLogo: Boolean
    "The iTunes ID for a video asset"
    iTunesId: String
    "The label according to the LSC tree"
    label: String
    "The main characters of the video asset"
    mainCharacters: [String] @deprecated(reason: "Field is no longer available")
    "The maturity rating of a video asset according to MPAA rating scheme"
    maturityRating: String
    "On which mediabase environment is the asset available (if not set, production is assumed)"
    mbEnvironment: String
    "Asset metadata"
    meta: RbmnAssetMetadata
    "Persons appearing in a video-clip"
    persons: [String]
    "The year the video has been released"
    releaseDate: String
    "RBMN API Resource (mp4, keyframes, hls)"
    resources(
        "Filter resources by type. (e.g. sprites)"
        filter: ResourceTypeFilter
    ): [RBMNVideo_Resource]
    "Playability and visibility dates set for this resource"
    scheduleLifecycle: RBMNVideo_ScheduleLifecycle @deprecated(reason: "Field is no longer available")
    "The season according to the LSC tree"
    season: String
    "Supporting roles in the video"
    supportingRole: [String] @deprecated(reason: "Field is no longer available")
    type: String!
    "The year the video has been produced"
    yearOfProduction: String
}

type RBMNVideo_Resource_Image implements RBMNVideo_Resource {
    "Pixel height of the image"
    height: Int
    "MIME type of the resource"
    mimeType: String
    "Mediabase resource type"
    resourceType: String
    "Resource URL"
    url: String
    "Pixel width of the image"
    width: Int
}

type RBMNVideo_Resource_MP4 implements RBMNVideo_Resource {
    "Duration of the MP4 in milliseconds"
    duration: Int
    "Pixel height of the MP4 video"
    height: Int
    "MIME type of the resource"
    mimeType: String
    "Mediabase resource type"
    resourceType: String
    "Resource URL"
    url: String
    "Pixel width of the MP4 video"
    width: Int
}

type RBMNVideo_Resource_Sprite implements RBMNVideo_Resource {
    "MIME type of the resource"
    mimeType: String
    "Mediabase resource type"
    resourceType: String
    "Resource URL"
    url: String
}

type RBMNVideo_Resource_Subtitle implements RBMNVideo_Resource {
    "Locale / language of the subtitle file"
    locale: String
    "MIME type of the resource"
    mimeType: String
    "Mediabase resource type"
    resourceType: String
    "Resource URL"
    url: String
}

type RBMNVideo_ScheduleLifecycle {
    "An asset may be shown (e.g. feature) but should not be playable after this timestamp"
    playabilityEnd: String @deprecated(reason: "Field is no longer available")
    "An asset can be shown but should not be playable before this timestamp"
    playabilityStart: String @deprecated(reason: "Field is no longer available")
    "An asset should no longer be visible after this point in time"
    visibilityEnd: String @deprecated(reason: "Field is no longer available")
    "Earliest point in time an asset should be visible"
    visibilityStart: String @deprecated(reason: "Field is no longer available")
}

type RbmnAssetMetadata {
    categories: RbmnAssetMetadataCategories
    "Boolean to define whether the content was created in Europe (https://digital-strategy.ec.europa.eu/en/policies/european-works)"
    isEuropeanWork: Boolean @deprecated(reason: "This field is deprecated and will be removed in the future. Please use the field \"isEuropeanWork\" on the video resources instead. e.g. \"... on Video { isEuropeanWork }\"")
}

type RbmnAssetMetadataCategories {
    "The playground of the moving image (AA-ID specific). This attribute is centrally governed via RBMH content management."
    asset: RbmnAssetMetadataCategory
    "The playground of the project the moving image resides in within content hub. This attribute is centrally governed via RBMH content management."
    project: RbmnAssetMetadataCategory
}

type RbmnAssetMetadataCategory {
    "The master system key obtained from HQs taxonomy. This key helps identify the playground in all consuming systems"
    sap: String
    "Playground name"
    title: String
}

type RbmnAudioEssence {
    "Audio track duration in seconds"
    durationInSeconds: Int
    "Audio asset meta data"
    meta: RbmnAssetMetadata
    resources: [AudioResources]!
}

type RbmnAudioEssenceMpeg {
    "Resource mime type"
    mimeType: String
    "Download link for audio track."
    url: String
}

"Recap videos for events"
type RecapVideo implements ContentResource & VideoResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    "A list of text blocks containing textual event information. Not all elements may be presented to the user by default. Kepp the first textualAretfactContainer consise (recommended less than 250 chars)"
    description: [AttributeTextualArtefactContainer]
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    extraFor(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorRecapVideoextraFor,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [EventProfile]
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Video is a European Work according to the following guideline: https://digital-strategy.ec.europa.eu/en/policies/european-works - information patched by rbmn service"
    isEuropeanWork: Boolean
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    "If set to true, embedding should not be offered for this asset. Used for exclusive content that should only live on redbull.com"
    noEmbedding: Boolean
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "The partner who sponsored the creation of a content piece (financial or other support)"
    sponsoredBy(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesponsoredBy,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    "Available subtitle-languages for the video asset in [RFC 5646](https://tools.ietf.org/html/rfc5646) notation. E.g. `en`, `en-US`, etc."
    subtitleLanguages: [String]
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
    videoDurationSeconds: Int
    "Reference to video archive for playback (e.g. mediabase RBMN API)"
    videoEssence: VideoService
    "Aspect ratio of the video-frame (width / height)"
    videoFrameAspectRatio: Float
    videoMarkers: [VideoChapterMarkers]!
}

type RedBullTVLinearStream implements AbstractService & EmbedsService & VideoService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "Stream ID (e.g. bike)"
    streamId: String!
    type: String!
}

type RedBullTVLiveVideostream implements AbstractService & EmbedsService & LiveVideoService & VideoService {
    "Video identification number from MIT mediabase asset catalogue (e.g. MI201802070142)"
    VIN: String
    "AA ID of a mediabase asset"
    assetId: String @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "The chapter according to the LSC tree"
    chapter: String @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    "Geo-locations referenced with the video-clip"
    geoLocations: [String] @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    "The iTunes ID for a video asset"
    iTunesId: String @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    "The label according to the LSC tree"
    label: String @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    "The main characters of the video asset"
    mainCharacters: [String] @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    "The maturity rating of a video asset according to MPAA rating scheme"
    maturityRating: String @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    "On which mediabase environment is the asset available (if not set, production is assumed)"
    mbEnvironment: String
    "Type of the media asset"
    mediaAssetType: [String] @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    "Persons appearing in a video-clip"
    persons: [String] @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    "The season according to the LSC tree"
    season: String @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    "Supporting roles in the video"
    supportingRole: [String] @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    type: String!
    "Video product ID from MIT aggregation API (e.g. AP-1M8YSM1M51W11)"
    videoId: String!
}

type RedBullTVVideo implements AbstractService & EmbedsService & VideoService {
    "Video identification number from MIT mediabase asset catalogue (e.g. MI201802070142)"
    VIN: String
    "AA ID of a mediabase asset"
    assetId: String @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "The chapter according to the LSC tree"
    chapter: String @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    "Geo-locations referenced with the video-clip"
    geoLocations: [String] @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    "The iTunes ID for a video asset"
    iTunesId: String @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    "The label according to the LSC tree"
    label: String @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    "The main characters of the video asset"
    mainCharacters: [String] @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    "The maturity rating of a video asset according to MPAA rating scheme"
    maturityRating: String @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    "On which mediabase environment is the asset available (if not set, production is assumed)"
    mbEnvironment: String
    "Type of the media asset"
    mediaAssetType: [String] @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    "Persons appearing in a video-clip"
    persons: [String] @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    "The season according to the LSC tree"
    season: String @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    "Supporting roles in the video"
    supportingRole: [String] @deprecated(reason: "The Agg API is no longer available as the 'https://rbtv.rbmbtnx.net' endpoint has been removed.")
    type: String!
    "Video product ID from MIT aggregation API (e.g. AP-1M8YSM1M51W11)"
    videoId: String!
}

"Video chapter marker referencing an internal or external resource by URL"
type ReferenceMarker {
    reference: AttributeWebLink!
    timestamp: String
    timestampInSeconds: Int
    title: AttributeText!
}

"Video chapter marker referencing a content resource"
type ResourceMarker {
    resource: ContentResource
    timestamp: String
    timestampInSeconds: Int
    title: AttributeText!
}

"A table-like content type that allows to display results of e.g races"
type ResultsAndStandings implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    body: AttributeTableContainer
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The event, the results table belongs to."
    event(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorResultsAndStandingsevent,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): EventProfile
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "The event-season, the results table belongs to."
    season(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorResultsAndStandingsseason,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): EventSeason
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

"Used to embed quizzes and polls"
type RiddleEmbed implements AbstractService & EmbedsService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    id: String!
    type: String!
}

"A season of a show"
type Season implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    "A list of text blocks containing textual season information. Not all elements may be presented to the user by default. Kepp the first textualAretfactContainer consise (recommended less than 250 chars)"
    description: [AttributeTextualArtefactContainer]
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "All episodes of the season"
    episodes(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorSeasonepisodes,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [EpisodeVideo]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "The label of the season, e.g. Season 1"
    label: String
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "The numerical season number (used for sorting on season)"
    seasonNumber: Int
    "The show the season belongs to"
    show(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorSeasonshow,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Show
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

type ServusTVLiveVideo implements AbstractService & EmbedsService & LiveVideoService & VideoService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    type: String!
    "Asset ID from MIT mediabase asset catalogue (e.g. AA-1UPS7JDND1W12)"
    videoId: String!
    "Video source system"
    videoSrc: String!
}

type ServusTVVideo implements AbstractService & EmbedsService & VideoService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    type: String!
    "Asset ID from MIT mediabase asset catalogue (e.g. AA-1UPS7JDND1W12)"
    videoId: String!
}

"A show"
type Show implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    "A list of text blocks containing textual event information.^ Not all elements may be presented to the user by default. Kepp the first textualAretfactContainer consise (recommended less than 250 chars)"
    description: [AttributeTextualArtefactContainer]
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    episodes(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorShowepisodes,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [EpisodeVideo]
    "All extra videos for a show. Set automatically as bi-directional relationship."
    extras(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorShowextras,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    seasons(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorShowseasons,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Season]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

"Adds a button to add people on snapchat"
type Snapchat implements AbstractService & LinksService & SocialService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "e.g. `https://www.snapchat.com/add/redbull/`"
    href: String!
    type: String!
}

"Embed a soundcloud track or playlist"
type SoundcloudAudio implements AbstractService & AudioService & EmbedsService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "The ID of a Soundcloud track or playlist"
    id: Int!
    "Needed for embedding of private soundcloud assets"
    secretToken: String
    soundcloudEntityType: String!
    type: String!
}

"Add a soundcloud link to artists or playlists"
type SoundcloudSocialLink implements AbstractService & AudioService & LinksService & SocialService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "e.g. `https://soundcloud.com/stephenvantran`"
    href: String!
    type: String!
}

"Add a spotify play button"
type Spotify implements AbstractService & AudioService & EmbedsService {
    assetType: String
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "Spotify content identifier"
    embedId: String
    "Spotify URL (https://play.spotify.com/track/0ZSdQvYFSY7BNjJEB6t0P3)"
    href: String
    type: String!
    "A spotify URI, e.g. spotify:artist:5lsC3H1vh9YSRQckyGv0Up"
    uri: String
}

"Add a link to a Spotify artist"
type SpotifySocialLink implements AbstractService & LinksService & SocialService {
    "A spotify artist URI, e.g. spotify:artist:5lsC3H1vh9YSRQckyGv0Up"
    artistUri: String!
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    type: String!
}

"Spreaker audio resource (podcast episode or show)"
type SpreakerAudio implements AbstractService & AudioService & EmbedsService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "An Episode is an audio track that can be listened to. It can be recorded or broadcasted live, and always belongs to a Show. An episode could be a podcast episode, a music track or song, a radio show episode, or a live broadcast."
    episode: SpreakerAudioEpisode
    "A Show is a collection of Episodes owned by a single User"
    show: SpreakerAudioShow
    "The ID of a spreaker resource"
    spreakerId: String!
    type: String!
}

type SpreakerAudioEpisode {
    "The date/time on which this episode has been scheduled to be published later"
    autoPublishedAt: String
    distributions(filter: SpreakerAudioEpisodeDistributionFilter): [PodcastPlatform] @deprecated(reason: "Use distributions in SpreakerAudioShow type.")
    "Episode duration expressed in seconds"
    duration: Int
    "The episode’s status, whether it’s either processing or encoding. The episode can be listened to only when the encoding_status is READY"
    encodingStatus: String
    "This property is exported only on LIVE episodes. The value is true if the episode’s live stream is currently active (broadcasting), otherwise it’s false"
    isOnAir: Boolean
    "URL for episodes’s playback"
    playbackUrl: String
    "The date/time on which this episode has been published"
    publishedAt: String
    "URL of the episode’s waveform data points (see Displaying the Episode Waveform for more information). The value is null if the episode has no waveform (ie. LIVE episodes or DRAFT episodes without any media file yet)."
    waveformUrl: String
}

type SpreakerAudioShow {
    distributions(filter: SpreakerAudioEpisodeDistributionFilter): [PodcastPlatform]
    "Date of a show’s latest published episode"
    lastEpisodeAt: String
    "RSS feed of the spreaker show"
    rssUrl: String
    "Public URL of the show on the Spreaker website"
    siteUrl: String
    "Show title"
    title: String
}

type Story implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String
    body: AttributeParagraphContainer
    callToActions: [AttributeCallToAction]
    contentCategory: [String]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Story body raw text"
    rawText: String
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "The partner who sponsored the creation of this story (financial or other support)"
    sponsoredBy(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorStorysponsoredBy,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    subType: String @deprecated(reason: "warn")
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

type Tag implements ContentResource {
    alternativeLabels: [String]
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    broaderTag(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorTagbroaderTag,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Tag
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    label: String
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "The status of a tag"
    status: String
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    subType: String
    "Enumeration of all tags from broaderTag (first element) to root tag (last element). Note that this field is no longer being calculated and will contain stale data!"
    tagHierarchy(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorTagtagHierarchy,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "This property is no longer being automatically calculated and will therefore be removed in the near future")
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
}

"A profile for a Red Bull-sponsored team - e.g. Red Bull Airforce, or Team OG"
type TeamProfile implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    "Mood image which can be used as a background - should not feature close-ups."
    backdropMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorTeamProfilebackdropMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Team profile biography with details of their background, achievements, and history."
    biography: [AttributeTextualArtefactContainer]
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    "Sport or culture disciplines the team focus on. E.g. `Biathlon`, `Dota 2`, etc."
    disciplines: [String]
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The year in which the team was founded."
    foundingYear: AttributeYear
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    "The location where the team is based in or where their HQ resides."
    locationBasedIn(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorTeamProfilelocationBasedIn,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Location
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "A phrase that represents the spirit and motivations of the team."
    quote: AttributeQuote
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "This contains links to the social media profiles of the team and/or members."
    socialLinks: [SocialService]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "A list of fun facts about the team."
    softFacts: AttributeEnumeration
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "CEO, Captain, Manager, Owner or Leader of the team."
    teamLeader: String
    teaser: AttributeText
    title: AttributeText
    "Timeline of past achievements or historical milestones with an optional indication of the team that achieved them."
    trackRecord: AttributeTrackRecord
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
    "Link to team's website"
    website: AttributeWebLink
}

"Embed an image from a Thing"
type ThingImage implements AbstractService & ImageService & LinksService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "Thing image"
    imageId: String!
    type: String!
}

"Embed a TikTok video"
type TikTokEmbed implements AbstractService & EmbedsService & SocialService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    type: String!
    url: String!
}

"Add a link to a TikTok profile"
type TikTokSocialLink implements AbstractService & LinksService & SocialService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "e.g. '@redbull'"
    tiktokUser: String!
    type: String!
    "URL to tik tok user profile"
    url: String
}

type TrackRecordRecords {
    "Time when the record was achieved."
    dateTime: AttributeYear
    "Some additional description about the record, e.g. 'Fastest female biker, 8th on Stage 4, 5th on Stage 8'"
    description: AttributeTextualArtefactContainer
    "Sport or culture disciplines. E.g. `Biathlon`, `Dota 2`, etc."
    discipline: AttributeText
    location: AttributeText
    "The record that was achieved, e.g. '1st Place: Island House Invitational Triathlon'"
    record: AttributeText!
}

"A trailer video clip"
type TrailerVideo implements ContentResource & VideoResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    "A list of text blocks containing textual event information. Not all elements may be presented to the user by default. Kepp the first textualAretfactContainer consise (recommended less than 250 chars)"
    description: [AttributeTextualArtefactContainer]
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    extraFor(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorTrailerVideoextraFor,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Video is a European Work according to the following guideline: https://digital-strategy.ec.europa.eu/en/policies/european-works - information patched by rbmn service"
    isEuropeanWork: Boolean
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    "If set to true, embedding should not be offered for this asset. Used for exclusive content that should only live on redbull.com"
    noEmbedding: Boolean
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "The partner who sponsored the creation of a content piece (financial or other support)"
    sponsoredBy(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesponsoredBy,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    "Available subtitle-languages for the video asset in [RFC 5646](https://tools.ietf.org/html/rfc5646) notation. E.g. `en`, `en-US`, etc."
    subtitleLanguages: [String]
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
    videoDurationSeconds: Int
    "Reference to video archive for playback (e.g. mediabase RBMN API)"
    videoEssence: VideoService
    "Aspect ratio of the video-frame (width / height)"
    videoFrameAspectRatio: Float
    videoMarkers: [VideoChapterMarkers]!
}

"Embed a live video from Twitch"
type TwitchLiveVideo implements AbstractService & EmbedsService & LiveVideoService & SocialService & VideoService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "A twitch channel name (e.g. 'kraken')"
    channelName: String
    "Twitch clip id (e.g. 'eleaguetv/ZealousMosquitoPeteZarollTie')"
    clipId: String
    type: String!
    "Twitch video id (e.g. 'c6055863')"
    videoId: String
}

"Add a link to a Twitch profile"
type TwitchSocialLink implements AbstractService & LinksService & SocialService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "e.g. `tsm_bjergsen`"
    channelName: String!
    type: String!
}

"Add a twitter follow button"
type TwitterFollow implements AbstractService & EmbedsService & SocialService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "e.g. '@redbull'"
    twitterUser: String!
    type: String!
}

"Embed a twitter tweet"
type TwitterTweetEmbed implements AbstractService & EmbedsService & SocialService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    hideCards: Boolean!
    hideConversation: Boolean!
    " The tweet id can be obtained by clicking on the date of a tweet, the last path fragment of the url in the browser address bar is the id. (e.g. 560070183650213889)"
    tweetId: String!
    type: String!
    widgetType: String!
}

"Embed a VK.com video"
type VKVideo implements AbstractService & EmbedsService & SocialService & VideoService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "vk.com hash for the widget connection (vk query parameter 'hash')"
    hash: String!
    "vk.com owner id of a post (vk query parameter 'oid')"
    ownerId: String!
    type: String!
    "vk.com video ID (query parameter 'id')"
    videoId: String!
}

"A video clip"
type Video implements ContentResource & VideoResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    "A list of text blocks containing textual event information. Not all elements may be presented to the user by default. Kepp the first textualAretfactContainer consise (recommended less than 250 chars)"
    description: [AttributeTextualArtefactContainer]
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    extraFor(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorVideoextraFor,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Video is a European Work according to the following guideline: https://digital-strategy.ec.europa.eu/en/policies/european-works - information patched by rbmn service"
    isEuropeanWork: Boolean
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    "If set to true, embedding should not be offered for this asset. Used for exclusive content that should only live on redbull.com"
    noEmbedding: Boolean
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "The partner who sponsored the creation of a content piece (financial or other support)"
    sponsoredBy(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesponsoredBy,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    "Available subtitle-languages for the video asset in [RFC 5646](https://tools.ietf.org/html/rfc5646) notation. E.g. `en`, `en-US`, etc."
    subtitleLanguages: [String]
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
    videoDurationSeconds: Int
    "Reference to video archive for playback (e.g. mediabase RBMN API)"
    videoEssence: VideoService
    "Aspect ratio of the video-frame (width / height)"
    videoFrameAspectRatio: Float
    videoMarkers: [VideoChapterMarkers]!
}

"360 degree videos (or VR videos)"
type Video360 implements ContentResource & VideoResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    "A list of text blocks containing textual event information. Not all elements may be presented to the user by default. Kepp the first textualAretfactContainer consise (recommended less than 250 chars)"
    description: [AttributeTextualArtefactContainer]
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Video is a European Work according to the following guideline: https://digital-strategy.ec.europa.eu/en/policies/european-works - information patched by rbmn service"
    isEuropeanWork: Boolean
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    "If set to true, embedding should not be offered for this asset. Used for exclusive content that should only live on redbull.com"
    noEmbedding: Boolean
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "The partner who sponsored the creation of a content piece (financial or other support)"
    sponsoredBy(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesponsoredBy,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    "Available subtitle-languages for the video asset in [RFC 5646](https://tools.ietf.org/html/rfc5646) notation. E.g. `en`, `en-US`, etc."
    subtitleLanguages: [String]
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
    videoDurationSeconds: Int
    "Reference to video archive for playback (e.g. mediabase RBMN API)"
    videoEssence: VideoService
    "Aspect ratio of the video-frame (width / height)"
    videoFrameAspectRatio: Float
    videoMarkers: [VideoChapterMarkers]!
}

"A channel featuring channel specific video content and a channel specific continuous stream."
type VideoChannel implements ContentResource {
    "Fetch attached Collections feed"
    attachedCollections(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    author: String @deprecated(reason: "This property will be removed from the abstract with the next release")
    callToActions: [AttributeCallToAction]
    "User defined terms to classify content."
    contentClassificationTerms: [String]
    "Lists all content-collections that are automatically assigned through the tag tree. Collections are automatically assigned if the `autoAssign` attribute of the collection is set to `true` and one of the tags set on the content resource is also available on the content collection's `mappedTags` relationship."
    contentCollections(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcecontentCollections,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentCollection]
    contextualTitle: AttributeContextualTextAttribute
    "Custom properties which can be added to content-resources (E.g. configuration of theming properites, etc.) Note that custom properties are not governed by the content-schema. It is therefore not guaranteed that certain custom properties exist. We also do not migrate custom properties if the schema evolves."
    customProperties: AttributeKeyValue
    "A list of text blocks containing textual event information. Not all elements may be presented to the user by default. Kepp the first textualAretfactContainer consise (recommended less than 250 chars)"
    description: [AttributeTextualArtefactContainer]
    displayTags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcedisplayTags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag] @deprecated(reason: "Display-tags are replaced with content-collections. Use relationship `contentCollections` instead. For further details check out http://bit.ly/2F9w93H")
    "A user facing date when a certain content-piece was updated the last time. This date is changed whenever a significant change was made to a content piece. An editor can decide when this date should be updated."
    editorialLastUpdatedDate: AttributeDateTime
    "All resources embedded in attributes"
    embeddedResources(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceembeddedResources,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Content element (usually images) used for featuring of a content element"
    featuredMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcefeaturedMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "Countries in which the resource is geo-blocked Resembled through two-letter ISO_3166-1_alpha-2 country codes"
    geoBlockedIn: [String]
    "Content piece shown in the header of another content element (e.g. image shown in the header of a story)"
    headerMedia(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourceheaderMedia,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    "The id of the resource"
    id: ID!
    "Content will be included in related-to queries if it is tagged with one of these tags or any children of the selectd tags."
    includeContentTaggedWith(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorVideoChannelincludeContentTaggedWith,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "Marks a resource as placeholder."
    isPlaceholder: Boolean
    "RB2 content ID."
    legacyContentId: String
    locations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelocations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Location]
    "Optional logo for a content piece (e.g. logo for an event-profile)"
    logo(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcelogo,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Image]
    "Reference to the master resource holding all translations"
    master(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcemaster,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    meta: ContentResourceMetaData
    partners(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepartners,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [PartnerProfile]
    "Content classification rating from the scheduling team."
    planningClassification: [String]
    preferredStyling: ContentStyling
    pseudoGroups(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcepseudoGroups,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [Tag]
    "The initial published date of the resource. This date is set automatically if the resource is moved from `draft` to `published` state the first time."
    publishedDate: AttributeDateTime
    "Fetch related content to the content resource"
    relatedContentFeed(
        "Specify the cursor for pagination. Get the cursor from the last item from the pageInfo field."
        after: String,
        "Specify a custom reference date instead of today."
        contextDate: String,
        "Add filter for feed to filter on attribute, relationship or meta fields"
        filter: FeedContentResourceFilterOperator,
        "Number of elements that should be returned."
        first: Int,
        "Also fetch and return assets in draft state. If not set, use argument from root. If not available on root, use default"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets. If not set, use argument from root. If not available on root, use default"
        includeUnpublished: Boolean,
        "If not set, uses localMixing from root. If localeMixing is not available on root the locale of the context object itself"
        localeMixing: [String],
        "Scoring function according to which the feed should be sorted"
        scoring: ScoringFunctions,
        "List of defaultSpaces from which content should be returned."
        spaces: [String]
    ): QueryFeedConnection
    relatedContents(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcerelatedContents,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "A list of search terms which result in a full-natch of a given content resource."
    searchTerms: [String]
    "Image that represents a content resource on social media platforms (og:image)"
    socialMediaImage(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcesocialMediaImage,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): Image
    "An additional title of a resource. E.g. films often do have subheadings like \"Streif - One Hell of a Ride\" where `One Hell of a Ride` would be the subHeading"
    subHeading: AttributeText
    tags(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetags,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    teaser: AttributeText
    title: AttributeText
    trackingDimensions: JSON
    translatedFrom(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslatedFrom,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): ContentResource
    translations(
        "Adds locales to the already defined localeMixingStrategy, rather than overriding it. Relationships will be filtered by the previously defined localeMixingStrategy, includingfeed Request, localeMixing and the complementary defined locales."
        complementaryLocaleMixing: [String],
        "Includes changes to assets that have been saved, but not published - \"draft changes\""
        draft: Boolean,
        "Disable removal of geo-blocked assets based on the primary locale. Setting is inherited from the root-field"
        enforceGeoBlocking: Boolean,
        "Filter relationships e.g. on type."
        filter: ContentResourceFilterOperatorContentResourcetranslations,
        "Fetch first n elements of a relationship"
        first: Int,
        "Also fetch and return assets in draft state"
        includeDraft: Boolean,
        "Also fetch and return unpublished assets"
        includeUnpublished: Boolean,
        "Fetch last n elements of a relationship"
        last: Int,
        "Set locales a relationship should be filtered for. The locales will be picked based on the order of locales provided. It is possible to configure fallback to languages ['en-INT', 'en'] (all locales with language en) or even fallback to any locale ['en-INT', 'en', '*'] (which essentially would only deduplicate a relationship without filtering)"
        localeDeduplication: [String]
    ): [ContentResource]
    "The type of the resource"
    type: String!
    "Must be unique across content GUID+language and may be reused for different locales"
    uriSlug: String
    "If provided, the URL should be used instead of dynamic routes (based on urislug) to link to the content resource (can be used to add resources which are presented outside the RB3 platform)"
    url: AttributeWebLink
    "Restrictions for which a content element should not be used."
    usageRestrictions: [String]
    "Reference to the linear stream"
    videoEssence: VideoService
}

type VideoMarker {
    "Underlying video essence the video markers apply to"
    externalReference: AttributeExternalReference
    "Indicates if the essence of this video marker has been changed and is not yet confirmed"
    hasUnconfirmedEssenceChanges: Boolean
    id: String
    "Chapter markers allow editors to guide users to specific areas of interest in video content"
    markers: [VideoChapterMarkers]!
    type: String
    "Content video resource associated with this video marker resource"
    videoResource: VideoResource
}

"Embed a vimeo video"
type VimeoVideo implements AbstractService & EmbedsService & VideoService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    hideByline: Boolean!
    hideDescription: Boolean!
    hidePortrait: Boolean!
    "The id of the vimeo video"
    id: Int!
    type: String!
}

"Add a link to a Youtube channel"
type YoutubeSocialLink implements AbstractService & LinksService & SocialService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "The ID of a Youtube channel"
    channelId: String
    type: String!
}

"Embed a youtube video"
type YoutubeVideo implements AbstractService & EmbedsService & SocialService & VideoService {
    attributes: JSON! @deprecated(reason: "We will fade out access to the raw JSON structure of services. Do not use this fields anymore")
    "The playlist from which the video should be played ('list=' parameter)"
    playlistId: String
    type: String!
    "The video ID of a youtube video. (not the youtube URL!) See https://www.google.at/?q=Youtube+video+id"
    videoId: String
}

"Enumeration type."
enum Enumerations {
    bullet
    labeled
    numeric
}

enum FlagResolutionEnum {
    none
    x2
    x3
}

"Crop will cut the image to the desired aspect ratio before scaling. Scale will not crop the image and scale the image down so that the longer edge does not exceed the defined height or width. With scale, the original aspect ratio is retained and all of the original image is visible"
enum ImageModes {
    crop
    scale
}

"RBMN resource types. Valid values are 'short_preview', 'proxy', 'subtitle_webvtt', 'reference_keyframe' and 'sprites'"
enum RBMNResourceTypes {
    proxy
    reference_keyframe
    short_preview
    sprites
    subtitle_webvtt
}

"Select a scoring function to specify based on which business rules content should be prioritised"
enum ScoringFunctions {
    aggregate
    featured
    featuredFresh
    featuredRelatedFresh
    freshness
    masonry
    popular
    recommended
    relatedFresh
    search
}

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

"The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSONObject

"Valid filter operations on resource"
input ContentResourceFilterOperatorAudioCliptranscript {
    author: InputOperatorsForStringTypes
    body: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorAudioEpisodeseason {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    episodes: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    seasonNumber: InputOperatorsForIntegerTypes
    series: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorAudioEpisodetranscript {
    author: InputOperatorsForStringTypes
    body: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorAudioSeasonepisodes {
    author: InputOperatorsForStringTypes
    body: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    episodeNumber: InputOperatorsForIntegerTypes
    essence: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    hosts: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    seasonNumber: InputOperatorsForIntegerTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    transcript: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorAudioSeasonseries {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    episodes: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    hosts: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    language: InputOperatorsForObjectTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    preview: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    seasons: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorAudioSeriesepisodes {
    author: InputOperatorsForStringTypes
    body: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    episodeNumber: InputOperatorsForIntegerTypes
    essence: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    hosts: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    seasonNumber: InputOperatorsForIntegerTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    transcript: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorAudioSeriespreview {
    author: InputOperatorsForStringTypes
    body: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    episodeNumber: InputOperatorsForIntegerTypes
    essence: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    hosts: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    seasonNumber: InputOperatorsForIntegerTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    transcript: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorAudioSeriesseasons {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    episodes: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    seasonNumber: InputOperatorsForIntegerTypes
    series: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorContentCollectionexcludeContentTaggedWith {
    alternativeLabels: InputOperatorsForStringTypes
    author: InputOperatorsForStringTypes
    broaderTag: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tagHierarchy: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorContentCollectionincludeContentTaggedWith {
    alternativeLabels: InputOperatorsForStringTypes
    author: InputOperatorsForStringTypes
    broaderTag: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tagHierarchy: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorContentCollectionmappedTags {
    alternativeLabels: InputOperatorsForStringTypes
    author: InputOperatorsForStringTypes
    broaderTag: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tagHierarchy: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorContentResourcecontentCollections {
    author: InputOperatorsForStringTypes
    autoAssign: InputOperatorsForBooleanTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorial: InputOperatorsForBooleanTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    excludeContentTaggedWith: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    includeContentTaggedWith: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    mappedTags: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorContentResourcedisplayTags {
    alternativeLabels: InputOperatorsForStringTypes
    author: InputOperatorsForStringTypes
    broaderTag: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tagHierarchy: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorContentResourceembeddedResources {
    alternativeLabels: InputOperatorsForStringTypes
    author: InputOperatorsForStringTypes
    autoAssign: InputOperatorsForBooleanTypes
    backdropMedia: InputOperatorsForObjectTypes
    biography: InputOperatorsForObjectTypes
    birthDate: InputOperatorsForObjectTypes
    body: InputOperatorsForObjectTypes
    brandingHexColorCode: InputOperatorsForStringTypes
    broaderTag: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    careerStart: InputOperatorsForObjectTypes
    clipEssence: InputOperatorsForObjectTypes
    contentCategory: InputOperatorsForStringTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    credits: InputOperatorsForStringTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    disciplines: InputOperatorsForStringTypes
    displayTags: InputOperatorsForObjectTypes
    editorial: InputOperatorsForBooleanTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    episodeNumber: InputOperatorsForIntegerTypes
    episodes: InputOperatorsForObjectTypes
    essence: InputOperatorsForObjectTypes
    event: InputOperatorsForObjectTypes
    eventDescription: InputOperatorsForObjectTypes
    eventDetails: InputOperatorsForObjectTypes
    eventTimeTable: InputOperatorsForObjectTypes
    events: InputOperatorsForObjectTypes
    excludeContentTaggedWith: InputOperatorsForObjectTypes
    extraFor: InputOperatorsForObjectTypes
    extras: InputOperatorsForObjectTypes
    facts: InputOperatorsForObjectTypes
    familyName: InputOperatorsForStringTypes
    featuredMedia: InputOperatorsForObjectTypes
    flavour: InputOperatorsForStringTypes
    foundingYear: InputOperatorsForObjectTypes
    gender: InputOperatorsForStringTypes
    geoBlockedIn: InputOperatorsForStringTypes
    givenName: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    hosts: InputOperatorsForObjectTypes
    href: InputOperatorsForObjectTypes
    imageEssence: InputOperatorsForObjectTypes
    imageEssenceContainsCaption: InputOperatorsForBooleanTypes
    images: InputOperatorsForObjectTypes
    includeContentTaggedWith: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isHostedByRedBull: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    isPrimary: InputOperatorsForBooleanTypes
    isSponsored: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    language: InputOperatorsForObjectTypes
    legacyContentId: InputOperatorsForStringTypes
    live: InputOperatorsForObjectTypes
    livePrimary: InputOperatorsForObjectTypes
    liveStatus: InputOperatorsForStringTypes
    location: InputOperatorsForObjectTypes
    locationBasedIn: InputOperatorsForObjectTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    mappedTags: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    members: InputOperatorsForObjectTypes
    nickName: InputOperatorsForStringTypes
    noEmbedding: InputOperatorsForBooleanTypes
    participatedYears: InputOperatorsForObjectTypes
    participatingPersons: InputOperatorsForObjectTypes
    participatingTeams: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    playabilityEnd: InputOperatorsForObjectTypes
    playabilityStart: InputOperatorsForObjectTypes
    pressAndMedia: InputOperatorsForObjectTypes
    preview: InputOperatorsForObjectTypes
    productRelatedImage: InputOperatorsForObjectTypes
    productRelatedQuote: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    quote: InputOperatorsForObjectTypes
    rbtvLiveStreamId: InputOperatorsForStringTypes
    recap: InputOperatorsForObjectTypes
    relatedContentContainers: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    results: InputOperatorsForObjectTypes
    rules: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    seasonNumber: InputOperatorsForIntegerTypes
    seasons: InputOperatorsForObjectTypes
    series: InputOperatorsForObjectTypes
    show: InputOperatorsForObjectTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    softFacts: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    statusLabel: InputOperatorsForStringTypes
    statusMessage: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subPages: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tagHierarchy: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teamLeader: InputOperatorsForStringTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    trackRecord: InputOperatorsForObjectTypes
    transcript: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorContentResourcefeaturedMedia {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    clipEssence: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    credits: InputOperatorsForStringTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    extraFor: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    imageEssence: InputOperatorsForObjectTypes
    imageEssenceContainsCaption: InputOperatorsForBooleanTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    noEmbedding: InputOperatorsForBooleanTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorContentResourceheaderMedia {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    credits: InputOperatorsForStringTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    episodeNumber: InputOperatorsForIntegerTypes
    extraFor: InputOperatorsForObjectTypes
    extras: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    imageEssence: InputOperatorsForObjectTypes
    imageEssenceContainsCaption: InputOperatorsForBooleanTypes
    includeContentTaggedWith: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    noEmbedding: InputOperatorsForBooleanTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    playabilityEnd: InputOperatorsForObjectTypes
    playabilityStart: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    seasonNumber: InputOperatorsForIntegerTypes
    socialMediaImage: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorContentResourcelocations {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    location: InputOperatorsForObjectTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorContentResourcelogo {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    credits: InputOperatorsForStringTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    imageEssence: InputOperatorsForObjectTypes
    imageEssenceContainsCaption: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorContentResourcemaster {
    alternativeLabels: InputOperatorsForStringTypes
    author: InputOperatorsForStringTypes
    autoAssign: InputOperatorsForBooleanTypes
    backdropMedia: InputOperatorsForObjectTypes
    biography: InputOperatorsForObjectTypes
    birthDate: InputOperatorsForObjectTypes
    body: InputOperatorsForObjectTypes
    brandingHexColorCode: InputOperatorsForStringTypes
    broaderTag: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    careerStart: InputOperatorsForObjectTypes
    clipEssence: InputOperatorsForObjectTypes
    contentCategory: InputOperatorsForStringTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    credits: InputOperatorsForStringTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    disciplines: InputOperatorsForStringTypes
    displayTags: InputOperatorsForObjectTypes
    editorial: InputOperatorsForBooleanTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    episodeNumber: InputOperatorsForIntegerTypes
    episodes: InputOperatorsForObjectTypes
    essence: InputOperatorsForObjectTypes
    event: InputOperatorsForObjectTypes
    eventDescription: InputOperatorsForObjectTypes
    eventDetails: InputOperatorsForObjectTypes
    eventTimeTable: InputOperatorsForObjectTypes
    events: InputOperatorsForObjectTypes
    excludeContentTaggedWith: InputOperatorsForObjectTypes
    extraFor: InputOperatorsForObjectTypes
    extras: InputOperatorsForObjectTypes
    facts: InputOperatorsForObjectTypes
    familyName: InputOperatorsForStringTypes
    featuredMedia: InputOperatorsForObjectTypes
    flavour: InputOperatorsForStringTypes
    foundingYear: InputOperatorsForObjectTypes
    gender: InputOperatorsForStringTypes
    geoBlockedIn: InputOperatorsForStringTypes
    givenName: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    hosts: InputOperatorsForObjectTypes
    href: InputOperatorsForObjectTypes
    imageEssence: InputOperatorsForObjectTypes
    imageEssenceContainsCaption: InputOperatorsForBooleanTypes
    images: InputOperatorsForObjectTypes
    includeContentTaggedWith: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isHostedByRedBull: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    isPrimary: InputOperatorsForBooleanTypes
    isSponsored: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    language: InputOperatorsForObjectTypes
    legacyContentId: InputOperatorsForStringTypes
    live: InputOperatorsForObjectTypes
    livePrimary: InputOperatorsForObjectTypes
    liveStatus: InputOperatorsForStringTypes
    location: InputOperatorsForObjectTypes
    locationBasedIn: InputOperatorsForObjectTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    mappedTags: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    members: InputOperatorsForObjectTypes
    nickName: InputOperatorsForStringTypes
    noEmbedding: InputOperatorsForBooleanTypes
    participatedYears: InputOperatorsForObjectTypes
    participatingPersons: InputOperatorsForObjectTypes
    participatingTeams: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    playabilityEnd: InputOperatorsForObjectTypes
    playabilityStart: InputOperatorsForObjectTypes
    pressAndMedia: InputOperatorsForObjectTypes
    preview: InputOperatorsForObjectTypes
    productRelatedImage: InputOperatorsForObjectTypes
    productRelatedQuote: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    quote: InputOperatorsForObjectTypes
    rbtvLiveStreamId: InputOperatorsForStringTypes
    recap: InputOperatorsForObjectTypes
    relatedContentContainers: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    results: InputOperatorsForObjectTypes
    rules: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    seasonNumber: InputOperatorsForIntegerTypes
    seasons: InputOperatorsForObjectTypes
    series: InputOperatorsForObjectTypes
    show: InputOperatorsForObjectTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    softFacts: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    statusLabel: InputOperatorsForStringTypes
    statusMessage: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subPages: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tagHierarchy: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teamLeader: InputOperatorsForStringTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    trackRecord: InputOperatorsForObjectTypes
    transcript: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorContentResourcepartners {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    href: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorContentResourcepseudoGroups {
    alternativeLabels: InputOperatorsForStringTypes
    author: InputOperatorsForStringTypes
    broaderTag: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tagHierarchy: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorContentResourcerelatedContents {
    alternativeLabels: InputOperatorsForStringTypes
    author: InputOperatorsForStringTypes
    autoAssign: InputOperatorsForBooleanTypes
    backdropMedia: InputOperatorsForObjectTypes
    biography: InputOperatorsForObjectTypes
    birthDate: InputOperatorsForObjectTypes
    body: InputOperatorsForObjectTypes
    brandingHexColorCode: InputOperatorsForStringTypes
    broaderTag: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    careerStart: InputOperatorsForObjectTypes
    clipEssence: InputOperatorsForObjectTypes
    contentCategory: InputOperatorsForStringTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    credits: InputOperatorsForStringTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    disciplines: InputOperatorsForStringTypes
    displayTags: InputOperatorsForObjectTypes
    editorial: InputOperatorsForBooleanTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    episodeNumber: InputOperatorsForIntegerTypes
    episodes: InputOperatorsForObjectTypes
    essence: InputOperatorsForObjectTypes
    event: InputOperatorsForObjectTypes
    eventDescription: InputOperatorsForObjectTypes
    eventDetails: InputOperatorsForObjectTypes
    eventTimeTable: InputOperatorsForObjectTypes
    events: InputOperatorsForObjectTypes
    excludeContentTaggedWith: InputOperatorsForObjectTypes
    extraFor: InputOperatorsForObjectTypes
    extras: InputOperatorsForObjectTypes
    facts: InputOperatorsForObjectTypes
    familyName: InputOperatorsForStringTypes
    featuredMedia: InputOperatorsForObjectTypes
    flavour: InputOperatorsForStringTypes
    foundingYear: InputOperatorsForObjectTypes
    gender: InputOperatorsForStringTypes
    geoBlockedIn: InputOperatorsForStringTypes
    givenName: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    hosts: InputOperatorsForObjectTypes
    href: InputOperatorsForObjectTypes
    imageEssence: InputOperatorsForObjectTypes
    imageEssenceContainsCaption: InputOperatorsForBooleanTypes
    images: InputOperatorsForObjectTypes
    includeContentTaggedWith: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isHostedByRedBull: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    isPrimary: InputOperatorsForBooleanTypes
    isSponsored: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    language: InputOperatorsForObjectTypes
    legacyContentId: InputOperatorsForStringTypes
    live: InputOperatorsForObjectTypes
    livePrimary: InputOperatorsForObjectTypes
    liveStatus: InputOperatorsForStringTypes
    location: InputOperatorsForObjectTypes
    locationBasedIn: InputOperatorsForObjectTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    mappedTags: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    members: InputOperatorsForObjectTypes
    nickName: InputOperatorsForStringTypes
    noEmbedding: InputOperatorsForBooleanTypes
    participatedYears: InputOperatorsForObjectTypes
    participatingPersons: InputOperatorsForObjectTypes
    participatingTeams: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    playabilityEnd: InputOperatorsForObjectTypes
    playabilityStart: InputOperatorsForObjectTypes
    pressAndMedia: InputOperatorsForObjectTypes
    preview: InputOperatorsForObjectTypes
    productRelatedImage: InputOperatorsForObjectTypes
    productRelatedQuote: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    quote: InputOperatorsForObjectTypes
    rbtvLiveStreamId: InputOperatorsForStringTypes
    recap: InputOperatorsForObjectTypes
    relatedContentContainers: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    results: InputOperatorsForObjectTypes
    rules: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    seasonNumber: InputOperatorsForIntegerTypes
    seasons: InputOperatorsForObjectTypes
    series: InputOperatorsForObjectTypes
    show: InputOperatorsForObjectTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    softFacts: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    statusLabel: InputOperatorsForStringTypes
    statusMessage: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subPages: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tagHierarchy: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teamLeader: InputOperatorsForStringTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    trackRecord: InputOperatorsForObjectTypes
    transcript: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorContentResourcesocialMediaImage {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    credits: InputOperatorsForStringTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    imageEssence: InputOperatorsForObjectTypes
    imageEssenceContainsCaption: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorContentResourcesponsoredBy {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    href: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorContentResourcetags {
    alternativeLabels: InputOperatorsForStringTypes
    author: InputOperatorsForStringTypes
    autoAssign: InputOperatorsForBooleanTypes
    backdropMedia: InputOperatorsForObjectTypes
    biography: InputOperatorsForObjectTypes
    birthDate: InputOperatorsForObjectTypes
    body: InputOperatorsForObjectTypes
    brandingHexColorCode: InputOperatorsForStringTypes
    broaderTag: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    careerStart: InputOperatorsForObjectTypes
    clipEssence: InputOperatorsForObjectTypes
    contentCategory: InputOperatorsForStringTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    credits: InputOperatorsForStringTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    disciplines: InputOperatorsForStringTypes
    displayTags: InputOperatorsForObjectTypes
    editorial: InputOperatorsForBooleanTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    episodeNumber: InputOperatorsForIntegerTypes
    episodes: InputOperatorsForObjectTypes
    essence: InputOperatorsForObjectTypes
    event: InputOperatorsForObjectTypes
    eventDescription: InputOperatorsForObjectTypes
    eventDetails: InputOperatorsForObjectTypes
    eventTimeTable: InputOperatorsForObjectTypes
    events: InputOperatorsForObjectTypes
    excludeContentTaggedWith: InputOperatorsForObjectTypes
    extraFor: InputOperatorsForObjectTypes
    extras: InputOperatorsForObjectTypes
    facts: InputOperatorsForObjectTypes
    familyName: InputOperatorsForStringTypes
    featuredMedia: InputOperatorsForObjectTypes
    flavour: InputOperatorsForStringTypes
    foundingYear: InputOperatorsForObjectTypes
    gender: InputOperatorsForStringTypes
    geoBlockedIn: InputOperatorsForStringTypes
    givenName: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    hosts: InputOperatorsForObjectTypes
    href: InputOperatorsForObjectTypes
    imageEssence: InputOperatorsForObjectTypes
    imageEssenceContainsCaption: InputOperatorsForBooleanTypes
    images: InputOperatorsForObjectTypes
    includeContentTaggedWith: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isHostedByRedBull: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    isPrimary: InputOperatorsForBooleanTypes
    isSponsored: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    language: InputOperatorsForObjectTypes
    legacyContentId: InputOperatorsForStringTypes
    live: InputOperatorsForObjectTypes
    livePrimary: InputOperatorsForObjectTypes
    liveStatus: InputOperatorsForStringTypes
    location: InputOperatorsForObjectTypes
    locationBasedIn: InputOperatorsForObjectTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    mappedTags: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    members: InputOperatorsForObjectTypes
    nickName: InputOperatorsForStringTypes
    noEmbedding: InputOperatorsForBooleanTypes
    participatedYears: InputOperatorsForObjectTypes
    participatingPersons: InputOperatorsForObjectTypes
    participatingTeams: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    playabilityEnd: InputOperatorsForObjectTypes
    playabilityStart: InputOperatorsForObjectTypes
    pressAndMedia: InputOperatorsForObjectTypes
    preview: InputOperatorsForObjectTypes
    productRelatedImage: InputOperatorsForObjectTypes
    productRelatedQuote: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    quote: InputOperatorsForObjectTypes
    rbtvLiveStreamId: InputOperatorsForStringTypes
    recap: InputOperatorsForObjectTypes
    relatedContentContainers: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    results: InputOperatorsForObjectTypes
    rules: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    seasonNumber: InputOperatorsForIntegerTypes
    seasons: InputOperatorsForObjectTypes
    series: InputOperatorsForObjectTypes
    show: InputOperatorsForObjectTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    softFacts: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    statusLabel: InputOperatorsForStringTypes
    statusMessage: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subPages: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tagHierarchy: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teamLeader: InputOperatorsForStringTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    trackRecord: InputOperatorsForObjectTypes
    transcript: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorContentResourcetranslatedFrom {
    alternativeLabels: InputOperatorsForStringTypes
    author: InputOperatorsForStringTypes
    autoAssign: InputOperatorsForBooleanTypes
    backdropMedia: InputOperatorsForObjectTypes
    biography: InputOperatorsForObjectTypes
    birthDate: InputOperatorsForObjectTypes
    body: InputOperatorsForObjectTypes
    brandingHexColorCode: InputOperatorsForStringTypes
    broaderTag: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    careerStart: InputOperatorsForObjectTypes
    clipEssence: InputOperatorsForObjectTypes
    contentCategory: InputOperatorsForStringTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    credits: InputOperatorsForStringTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    disciplines: InputOperatorsForStringTypes
    displayTags: InputOperatorsForObjectTypes
    editorial: InputOperatorsForBooleanTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    episodeNumber: InputOperatorsForIntegerTypes
    episodes: InputOperatorsForObjectTypes
    essence: InputOperatorsForObjectTypes
    event: InputOperatorsForObjectTypes
    eventDescription: InputOperatorsForObjectTypes
    eventDetails: InputOperatorsForObjectTypes
    eventTimeTable: InputOperatorsForObjectTypes
    events: InputOperatorsForObjectTypes
    excludeContentTaggedWith: InputOperatorsForObjectTypes
    extraFor: InputOperatorsForObjectTypes
    extras: InputOperatorsForObjectTypes
    facts: InputOperatorsForObjectTypes
    familyName: InputOperatorsForStringTypes
    featuredMedia: InputOperatorsForObjectTypes
    flavour: InputOperatorsForStringTypes
    foundingYear: InputOperatorsForObjectTypes
    gender: InputOperatorsForStringTypes
    geoBlockedIn: InputOperatorsForStringTypes
    givenName: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    hosts: InputOperatorsForObjectTypes
    href: InputOperatorsForObjectTypes
    imageEssence: InputOperatorsForObjectTypes
    imageEssenceContainsCaption: InputOperatorsForBooleanTypes
    images: InputOperatorsForObjectTypes
    includeContentTaggedWith: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isHostedByRedBull: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    isPrimary: InputOperatorsForBooleanTypes
    isSponsored: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    language: InputOperatorsForObjectTypes
    legacyContentId: InputOperatorsForStringTypes
    live: InputOperatorsForObjectTypes
    livePrimary: InputOperatorsForObjectTypes
    liveStatus: InputOperatorsForStringTypes
    location: InputOperatorsForObjectTypes
    locationBasedIn: InputOperatorsForObjectTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    mappedTags: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    members: InputOperatorsForObjectTypes
    nickName: InputOperatorsForStringTypes
    noEmbedding: InputOperatorsForBooleanTypes
    participatedYears: InputOperatorsForObjectTypes
    participatingPersons: InputOperatorsForObjectTypes
    participatingTeams: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    playabilityEnd: InputOperatorsForObjectTypes
    playabilityStart: InputOperatorsForObjectTypes
    pressAndMedia: InputOperatorsForObjectTypes
    preview: InputOperatorsForObjectTypes
    productRelatedImage: InputOperatorsForObjectTypes
    productRelatedQuote: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    quote: InputOperatorsForObjectTypes
    rbtvLiveStreamId: InputOperatorsForStringTypes
    recap: InputOperatorsForObjectTypes
    relatedContentContainers: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    results: InputOperatorsForObjectTypes
    rules: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    seasonNumber: InputOperatorsForIntegerTypes
    seasons: InputOperatorsForObjectTypes
    series: InputOperatorsForObjectTypes
    show: InputOperatorsForObjectTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    softFacts: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    statusLabel: InputOperatorsForStringTypes
    statusMessage: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subPages: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tagHierarchy: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teamLeader: InputOperatorsForStringTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    trackRecord: InputOperatorsForObjectTypes
    transcript: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorContentResourcetranslations {
    alternativeLabels: InputOperatorsForStringTypes
    author: InputOperatorsForStringTypes
    autoAssign: InputOperatorsForBooleanTypes
    backdropMedia: InputOperatorsForObjectTypes
    biography: InputOperatorsForObjectTypes
    birthDate: InputOperatorsForObjectTypes
    body: InputOperatorsForObjectTypes
    brandingHexColorCode: InputOperatorsForStringTypes
    broaderTag: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    careerStart: InputOperatorsForObjectTypes
    clipEssence: InputOperatorsForObjectTypes
    contentCategory: InputOperatorsForStringTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    credits: InputOperatorsForStringTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    disciplines: InputOperatorsForStringTypes
    displayTags: InputOperatorsForObjectTypes
    editorial: InputOperatorsForBooleanTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    episodeNumber: InputOperatorsForIntegerTypes
    episodes: InputOperatorsForObjectTypes
    essence: InputOperatorsForObjectTypes
    event: InputOperatorsForObjectTypes
    eventDescription: InputOperatorsForObjectTypes
    eventDetails: InputOperatorsForObjectTypes
    eventTimeTable: InputOperatorsForObjectTypes
    events: InputOperatorsForObjectTypes
    excludeContentTaggedWith: InputOperatorsForObjectTypes
    extraFor: InputOperatorsForObjectTypes
    extras: InputOperatorsForObjectTypes
    facts: InputOperatorsForObjectTypes
    familyName: InputOperatorsForStringTypes
    featuredMedia: InputOperatorsForObjectTypes
    flavour: InputOperatorsForStringTypes
    foundingYear: InputOperatorsForObjectTypes
    gender: InputOperatorsForStringTypes
    geoBlockedIn: InputOperatorsForStringTypes
    givenName: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    hosts: InputOperatorsForObjectTypes
    href: InputOperatorsForObjectTypes
    imageEssence: InputOperatorsForObjectTypes
    imageEssenceContainsCaption: InputOperatorsForBooleanTypes
    images: InputOperatorsForObjectTypes
    includeContentTaggedWith: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isHostedByRedBull: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    isPrimary: InputOperatorsForBooleanTypes
    isSponsored: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    language: InputOperatorsForObjectTypes
    legacyContentId: InputOperatorsForStringTypes
    live: InputOperatorsForObjectTypes
    livePrimary: InputOperatorsForObjectTypes
    liveStatus: InputOperatorsForStringTypes
    location: InputOperatorsForObjectTypes
    locationBasedIn: InputOperatorsForObjectTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    mappedTags: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    members: InputOperatorsForObjectTypes
    nickName: InputOperatorsForStringTypes
    noEmbedding: InputOperatorsForBooleanTypes
    participatedYears: InputOperatorsForObjectTypes
    participatingPersons: InputOperatorsForObjectTypes
    participatingTeams: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    playabilityEnd: InputOperatorsForObjectTypes
    playabilityStart: InputOperatorsForObjectTypes
    pressAndMedia: InputOperatorsForObjectTypes
    preview: InputOperatorsForObjectTypes
    productRelatedImage: InputOperatorsForObjectTypes
    productRelatedQuote: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    quote: InputOperatorsForObjectTypes
    rbtvLiveStreamId: InputOperatorsForStringTypes
    recap: InputOperatorsForObjectTypes
    relatedContentContainers: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    results: InputOperatorsForObjectTypes
    rules: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    seasonNumber: InputOperatorsForIntegerTypes
    seasons: InputOperatorsForObjectTypes
    series: InputOperatorsForObjectTypes
    show: InputOperatorsForObjectTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    softFacts: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    statusLabel: InputOperatorsForStringTypes
    statusMessage: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subPages: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tagHierarchy: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teamLeader: InputOperatorsForStringTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    trackRecord: InputOperatorsForObjectTypes
    transcript: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorEpisodeVideoextras {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    extraFor: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    noEmbedding: InputOperatorsForBooleanTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorEpisodeVideoseason {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    episodes: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    seasonNumber: InputOperatorsForIntegerTypes
    show: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorEventProfileextras {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    extraFor: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    noEmbedding: InputOperatorsForBooleanTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorEventProfilelive {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    events: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    isPrimary: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    statusLabel: InputOperatorsForStringTypes
    statusMessage: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorEventProfilelivePrimary {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    events: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    isPrimary: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    statusLabel: InputOperatorsForStringTypes
    statusMessage: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorEventProfileparticipatingPersons {
    author: InputOperatorsForStringTypes
    backdropMedia: InputOperatorsForObjectTypes
    biography: InputOperatorsForObjectTypes
    birthDate: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    careerStart: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    disciplines: InputOperatorsForStringTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    facts: InputOperatorsForObjectTypes
    familyName: InputOperatorsForStringTypes
    featuredMedia: InputOperatorsForObjectTypes
    gender: InputOperatorsForStringTypes
    geoBlockedIn: InputOperatorsForStringTypes
    givenName: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    isSponsored: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    nickName: InputOperatorsForStringTypes
    participatedYears: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    productRelatedImage: InputOperatorsForObjectTypes
    productRelatedQuote: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    quote: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    softFacts: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    trackRecord: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorEventProfileparticipatingTeams {
    author: InputOperatorsForStringTypes
    backdropMedia: InputOperatorsForObjectTypes
    biography: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    disciplines: InputOperatorsForStringTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    facts: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    foundingYear: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    isSponsored: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locationBasedIn: InputOperatorsForObjectTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    members: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    quote: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    softFacts: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teamLeader: InputOperatorsForStringTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    trackRecord: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorEventProfilepressAndMedia {
    author: InputOperatorsForStringTypes
    body: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorEventProfilerecap {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    extraFor: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    noEmbedding: InputOperatorsForBooleanTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorEventProfileresults {
    author: InputOperatorsForStringTypes
    body: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorEventProfilerules {
    author: InputOperatorsForStringTypes
    body: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorEventProfileseason {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    events: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    seasonNumber: InputOperatorsForIntegerTypes
    series: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorEventProfileseries {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    events: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    seasons: InputOperatorsForObjectTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subPages: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    trackRecord: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorEventProfilesponsoredBy {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    href: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorEventSeasonevents {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    eventDescription: InputOperatorsForObjectTypes
    eventDetails: InputOperatorsForObjectTypes
    eventTimeTable: InputOperatorsForObjectTypes
    extras: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isHostedByRedBull: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    live: InputOperatorsForObjectTypes
    livePrimary: InputOperatorsForObjectTypes
    liveStatus: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    participatingPersons: InputOperatorsForObjectTypes
    participatingTeams: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pressAndMedia: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    rbtvLiveStreamId: InputOperatorsForStringTypes
    recap: InputOperatorsForObjectTypes
    relatedContentContainers: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    results: InputOperatorsForObjectTypes
    rules: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    series: InputOperatorsForObjectTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    statusMessage: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subPages: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorEventSeasonseries {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    events: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    seasons: InputOperatorsForObjectTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subPages: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    trackRecord: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorEventSeriesevents {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    eventDescription: InputOperatorsForObjectTypes
    eventDetails: InputOperatorsForObjectTypes
    eventTimeTable: InputOperatorsForObjectTypes
    extras: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isHostedByRedBull: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    live: InputOperatorsForObjectTypes
    livePrimary: InputOperatorsForObjectTypes
    liveStatus: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    participatingPersons: InputOperatorsForObjectTypes
    participatingTeams: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pressAndMedia: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    rbtvLiveStreamId: InputOperatorsForStringTypes
    recap: InputOperatorsForObjectTypes
    relatedContentContainers: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    results: InputOperatorsForObjectTypes
    rules: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    series: InputOperatorsForObjectTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    statusMessage: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subPages: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorEventSeriesseasons {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    events: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    seasonNumber: InputOperatorsForIntegerTypes
    series: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorFeedTemplatepreviewResource {
    alternativeLabels: InputOperatorsForStringTypes
    author: InputOperatorsForStringTypes
    autoAssign: InputOperatorsForBooleanTypes
    backdropMedia: InputOperatorsForObjectTypes
    biography: InputOperatorsForObjectTypes
    birthDate: InputOperatorsForObjectTypes
    body: InputOperatorsForObjectTypes
    brandingHexColorCode: InputOperatorsForStringTypes
    broaderTag: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    careerStart: InputOperatorsForObjectTypes
    clipEssence: InputOperatorsForObjectTypes
    contentCategory: InputOperatorsForStringTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    credits: InputOperatorsForStringTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    disciplines: InputOperatorsForStringTypes
    displayTags: InputOperatorsForObjectTypes
    editorial: InputOperatorsForBooleanTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    episodeNumber: InputOperatorsForIntegerTypes
    episodes: InputOperatorsForObjectTypes
    essence: InputOperatorsForObjectTypes
    event: InputOperatorsForObjectTypes
    eventDescription: InputOperatorsForObjectTypes
    eventDetails: InputOperatorsForObjectTypes
    eventTimeTable: InputOperatorsForObjectTypes
    events: InputOperatorsForObjectTypes
    excludeContentTaggedWith: InputOperatorsForObjectTypes
    extraFor: InputOperatorsForObjectTypes
    extras: InputOperatorsForObjectTypes
    facts: InputOperatorsForObjectTypes
    familyName: InputOperatorsForStringTypes
    featuredMedia: InputOperatorsForObjectTypes
    flavour: InputOperatorsForStringTypes
    foundingYear: InputOperatorsForObjectTypes
    gender: InputOperatorsForStringTypes
    geoBlockedIn: InputOperatorsForStringTypes
    givenName: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    hosts: InputOperatorsForObjectTypes
    href: InputOperatorsForObjectTypes
    imageEssence: InputOperatorsForObjectTypes
    imageEssenceContainsCaption: InputOperatorsForBooleanTypes
    images: InputOperatorsForObjectTypes
    includeContentTaggedWith: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isHostedByRedBull: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    isPrimary: InputOperatorsForBooleanTypes
    isSponsored: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    language: InputOperatorsForObjectTypes
    legacyContentId: InputOperatorsForStringTypes
    live: InputOperatorsForObjectTypes
    livePrimary: InputOperatorsForObjectTypes
    liveStatus: InputOperatorsForStringTypes
    location: InputOperatorsForObjectTypes
    locationBasedIn: InputOperatorsForObjectTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    mappedTags: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    members: InputOperatorsForObjectTypes
    nickName: InputOperatorsForStringTypes
    noEmbedding: InputOperatorsForBooleanTypes
    participatedYears: InputOperatorsForObjectTypes
    participatingPersons: InputOperatorsForObjectTypes
    participatingTeams: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    playabilityEnd: InputOperatorsForObjectTypes
    playabilityStart: InputOperatorsForObjectTypes
    pressAndMedia: InputOperatorsForObjectTypes
    preview: InputOperatorsForObjectTypes
    productRelatedImage: InputOperatorsForObjectTypes
    productRelatedQuote: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    quote: InputOperatorsForObjectTypes
    rbtvLiveStreamId: InputOperatorsForStringTypes
    recap: InputOperatorsForObjectTypes
    relatedContentContainers: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    results: InputOperatorsForObjectTypes
    rules: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    seasonNumber: InputOperatorsForIntegerTypes
    seasons: InputOperatorsForObjectTypes
    series: InputOperatorsForObjectTypes
    show: InputOperatorsForObjectTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    softFacts: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    statusLabel: InputOperatorsForStringTypes
    statusMessage: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subPages: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tagHierarchy: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teamLeader: InputOperatorsForStringTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    trackRecord: InputOperatorsForObjectTypes
    transcript: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorFilmextras {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    extraFor: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    noEmbedding: InputOperatorsForBooleanTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorGroupProfilemembers {
    author: InputOperatorsForStringTypes
    backdropMedia: InputOperatorsForObjectTypes
    biography: InputOperatorsForObjectTypes
    birthDate: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    careerStart: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    disciplines: InputOperatorsForStringTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    facts: InputOperatorsForObjectTypes
    familyName: InputOperatorsForStringTypes
    featuredMedia: InputOperatorsForObjectTypes
    gender: InputOperatorsForStringTypes
    geoBlockedIn: InputOperatorsForStringTypes
    givenName: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    isSponsored: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    nickName: InputOperatorsForStringTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    productRelatedImage: InputOperatorsForObjectTypes
    productRelatedQuote: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    quote: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    softFacts: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    trackRecord: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorImageGalleryimages {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    credits: InputOperatorsForStringTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    imageEssence: InputOperatorsForObjectTypes
    imageEssenceContainsCaption: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorLifecyclesresource {
    alternativeLabels: InputOperatorsForStringTypes
    author: InputOperatorsForStringTypes
    autoAssign: InputOperatorsForBooleanTypes
    backdropMedia: InputOperatorsForObjectTypes
    biography: InputOperatorsForObjectTypes
    birthDate: InputOperatorsForObjectTypes
    body: InputOperatorsForObjectTypes
    brandingHexColorCode: InputOperatorsForStringTypes
    broaderTag: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    careerStart: InputOperatorsForObjectTypes
    clipEssence: InputOperatorsForObjectTypes
    contentCategory: InputOperatorsForStringTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    credits: InputOperatorsForStringTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    disciplines: InputOperatorsForStringTypes
    displayTags: InputOperatorsForObjectTypes
    editorial: InputOperatorsForBooleanTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    episodeNumber: InputOperatorsForIntegerTypes
    episodes: InputOperatorsForObjectTypes
    essence: InputOperatorsForObjectTypes
    event: InputOperatorsForObjectTypes
    eventDescription: InputOperatorsForObjectTypes
    eventDetails: InputOperatorsForObjectTypes
    eventTimeTable: InputOperatorsForObjectTypes
    events: InputOperatorsForObjectTypes
    excludeContentTaggedWith: InputOperatorsForObjectTypes
    extraFor: InputOperatorsForObjectTypes
    extras: InputOperatorsForObjectTypes
    facts: InputOperatorsForObjectTypes
    familyName: InputOperatorsForStringTypes
    featuredMedia: InputOperatorsForObjectTypes
    flavour: InputOperatorsForStringTypes
    foundingYear: InputOperatorsForObjectTypes
    gender: InputOperatorsForStringTypes
    geoBlockedIn: InputOperatorsForStringTypes
    givenName: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    hosts: InputOperatorsForObjectTypes
    href: InputOperatorsForObjectTypes
    imageEssence: InputOperatorsForObjectTypes
    imageEssenceContainsCaption: InputOperatorsForBooleanTypes
    images: InputOperatorsForObjectTypes
    includeContentTaggedWith: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isHostedByRedBull: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    isPrimary: InputOperatorsForBooleanTypes
    isSponsored: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    language: InputOperatorsForObjectTypes
    legacyContentId: InputOperatorsForStringTypes
    live: InputOperatorsForObjectTypes
    livePrimary: InputOperatorsForObjectTypes
    liveStatus: InputOperatorsForStringTypes
    location: InputOperatorsForObjectTypes
    locationBasedIn: InputOperatorsForObjectTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    mappedTags: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    members: InputOperatorsForObjectTypes
    nickName: InputOperatorsForStringTypes
    noEmbedding: InputOperatorsForBooleanTypes
    participatedYears: InputOperatorsForObjectTypes
    participatingPersons: InputOperatorsForObjectTypes
    participatingTeams: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    playabilityEnd: InputOperatorsForObjectTypes
    playabilityStart: InputOperatorsForObjectTypes
    pressAndMedia: InputOperatorsForObjectTypes
    preview: InputOperatorsForObjectTypes
    productRelatedImage: InputOperatorsForObjectTypes
    productRelatedQuote: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    quote: InputOperatorsForObjectTypes
    rbtvLiveStreamId: InputOperatorsForStringTypes
    recap: InputOperatorsForObjectTypes
    relatedContentContainers: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    results: InputOperatorsForObjectTypes
    rules: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    seasonNumber: InputOperatorsForIntegerTypes
    seasons: InputOperatorsForObjectTypes
    series: InputOperatorsForObjectTypes
    show: InputOperatorsForObjectTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    softFacts: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    statusLabel: InputOperatorsForStringTypes
    statusMessage: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subPages: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tagHierarchy: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teamLeader: InputOperatorsForStringTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    trackRecord: InputOperatorsForObjectTypes
    transcript: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorLiveVideoevents {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    eventDescription: InputOperatorsForObjectTypes
    eventDetails: InputOperatorsForObjectTypes
    eventTimeTable: InputOperatorsForObjectTypes
    extras: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isHostedByRedBull: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    live: InputOperatorsForObjectTypes
    livePrimary: InputOperatorsForObjectTypes
    liveStatus: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    participatingPersons: InputOperatorsForObjectTypes
    participatingTeams: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pressAndMedia: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    rbtvLiveStreamId: InputOperatorsForStringTypes
    recap: InputOperatorsForObjectTypes
    relatedContentContainers: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    results: InputOperatorsForObjectTypes
    rules: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    series: InputOperatorsForObjectTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    statusMessage: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subPages: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorPersonProfilebackdropMedia {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    credits: InputOperatorsForStringTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    imageEssence: InputOperatorsForObjectTypes
    imageEssenceContainsCaption: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorPersonProfileproductRelatedImage {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    credits: InputOperatorsForStringTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    imageEssence: InputOperatorsForObjectTypes
    imageEssenceContainsCaption: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorPlaceholderAssignmentplaceholderResource {
    alternativeLabels: InputOperatorsForStringTypes
    author: InputOperatorsForStringTypes
    autoAssign: InputOperatorsForBooleanTypes
    backdropMedia: InputOperatorsForObjectTypes
    biography: InputOperatorsForObjectTypes
    birthDate: InputOperatorsForObjectTypes
    body: InputOperatorsForObjectTypes
    brandingHexColorCode: InputOperatorsForStringTypes
    broaderTag: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    careerStart: InputOperatorsForObjectTypes
    clipEssence: InputOperatorsForObjectTypes
    contentCategory: InputOperatorsForStringTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    credits: InputOperatorsForStringTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    disciplines: InputOperatorsForStringTypes
    displayTags: InputOperatorsForObjectTypes
    editorial: InputOperatorsForBooleanTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    episodeNumber: InputOperatorsForIntegerTypes
    episodes: InputOperatorsForObjectTypes
    essence: InputOperatorsForObjectTypes
    event: InputOperatorsForObjectTypes
    eventDescription: InputOperatorsForObjectTypes
    eventDetails: InputOperatorsForObjectTypes
    eventTimeTable: InputOperatorsForObjectTypes
    events: InputOperatorsForObjectTypes
    excludeContentTaggedWith: InputOperatorsForObjectTypes
    extraFor: InputOperatorsForObjectTypes
    extras: InputOperatorsForObjectTypes
    facts: InputOperatorsForObjectTypes
    familyName: InputOperatorsForStringTypes
    featuredMedia: InputOperatorsForObjectTypes
    flavour: InputOperatorsForStringTypes
    foundingYear: InputOperatorsForObjectTypes
    gender: InputOperatorsForStringTypes
    geoBlockedIn: InputOperatorsForStringTypes
    givenName: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    hosts: InputOperatorsForObjectTypes
    href: InputOperatorsForObjectTypes
    imageEssence: InputOperatorsForObjectTypes
    imageEssenceContainsCaption: InputOperatorsForBooleanTypes
    images: InputOperatorsForObjectTypes
    includeContentTaggedWith: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isHostedByRedBull: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    isPrimary: InputOperatorsForBooleanTypes
    isSponsored: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    language: InputOperatorsForObjectTypes
    legacyContentId: InputOperatorsForStringTypes
    live: InputOperatorsForObjectTypes
    livePrimary: InputOperatorsForObjectTypes
    liveStatus: InputOperatorsForStringTypes
    location: InputOperatorsForObjectTypes
    locationBasedIn: InputOperatorsForObjectTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    mappedTags: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    members: InputOperatorsForObjectTypes
    nickName: InputOperatorsForStringTypes
    noEmbedding: InputOperatorsForBooleanTypes
    participatedYears: InputOperatorsForObjectTypes
    participatingPersons: InputOperatorsForObjectTypes
    participatingTeams: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    playabilityEnd: InputOperatorsForObjectTypes
    playabilityStart: InputOperatorsForObjectTypes
    pressAndMedia: InputOperatorsForObjectTypes
    preview: InputOperatorsForObjectTypes
    productRelatedImage: InputOperatorsForObjectTypes
    productRelatedQuote: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    quote: InputOperatorsForObjectTypes
    rbtvLiveStreamId: InputOperatorsForStringTypes
    recap: InputOperatorsForObjectTypes
    relatedContentContainers: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    results: InputOperatorsForObjectTypes
    rules: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    seasonNumber: InputOperatorsForIntegerTypes
    seasons: InputOperatorsForObjectTypes
    series: InputOperatorsForObjectTypes
    show: InputOperatorsForObjectTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    softFacts: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    statusLabel: InputOperatorsForStringTypes
    statusMessage: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subPages: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tagHierarchy: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teamLeader: InputOperatorsForStringTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    trackRecord: InputOperatorsForObjectTypes
    transcript: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorProjectProfileparticipatingPersons {
    author: InputOperatorsForStringTypes
    backdropMedia: InputOperatorsForObjectTypes
    biography: InputOperatorsForObjectTypes
    birthDate: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    careerStart: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    disciplines: InputOperatorsForStringTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    facts: InputOperatorsForObjectTypes
    familyName: InputOperatorsForStringTypes
    featuredMedia: InputOperatorsForObjectTypes
    gender: InputOperatorsForStringTypes
    geoBlockedIn: InputOperatorsForStringTypes
    givenName: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    isSponsored: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    nickName: InputOperatorsForStringTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    productRelatedImage: InputOperatorsForObjectTypes
    productRelatedQuote: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    quote: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    softFacts: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    trackRecord: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorProjectProfileparticipatingTeams {
    author: InputOperatorsForStringTypes
    backdropMedia: InputOperatorsForObjectTypes
    biography: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    disciplines: InputOperatorsForStringTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    facts: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    foundingYear: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    isSponsored: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locationBasedIn: InputOperatorsForObjectTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    members: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    quote: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    softFacts: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teamLeader: InputOperatorsForStringTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    trackRecord: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorRecapVideoextraFor {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    eventDescription: InputOperatorsForObjectTypes
    eventDetails: InputOperatorsForObjectTypes
    eventTimeTable: InputOperatorsForObjectTypes
    extras: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isHostedByRedBull: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    live: InputOperatorsForObjectTypes
    livePrimary: InputOperatorsForObjectTypes
    liveStatus: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    participatingPersons: InputOperatorsForObjectTypes
    participatingTeams: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pressAndMedia: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    rbtvLiveStreamId: InputOperatorsForStringTypes
    recap: InputOperatorsForObjectTypes
    relatedContentContainers: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    results: InputOperatorsForObjectTypes
    rules: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    series: InputOperatorsForObjectTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    statusMessage: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subPages: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorResultsAndStandingsevent {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    eventDescription: InputOperatorsForObjectTypes
    eventDetails: InputOperatorsForObjectTypes
    eventTimeTable: InputOperatorsForObjectTypes
    extras: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isHostedByRedBull: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    live: InputOperatorsForObjectTypes
    livePrimary: InputOperatorsForObjectTypes
    liveStatus: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    participatingPersons: InputOperatorsForObjectTypes
    participatingTeams: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pressAndMedia: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    rbtvLiveStreamId: InputOperatorsForStringTypes
    recap: InputOperatorsForObjectTypes
    relatedContentContainers: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    results: InputOperatorsForObjectTypes
    rules: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    series: InputOperatorsForObjectTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    statusMessage: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subPages: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorResultsAndStandingsseason {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    events: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    seasonNumber: InputOperatorsForIntegerTypes
    series: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorSeasonepisodes {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    episodeNumber: InputOperatorsForIntegerTypes
    extras: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    noEmbedding: InputOperatorsForBooleanTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    playabilityEnd: InputOperatorsForObjectTypes
    playabilityStart: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    seasonNumber: InputOperatorsForIntegerTypes
    socialMediaImage: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorSeasonshow {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    episodes: InputOperatorsForObjectTypes
    extras: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    seasons: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorShowepisodes {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    episodeNumber: InputOperatorsForIntegerTypes
    extras: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    noEmbedding: InputOperatorsForBooleanTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    playabilityEnd: InputOperatorsForObjectTypes
    playabilityStart: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    seasonNumber: InputOperatorsForIntegerTypes
    socialMediaImage: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorShowextras {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    extraFor: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    noEmbedding: InputOperatorsForBooleanTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorShowseasons {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    episodes: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    seasonNumber: InputOperatorsForIntegerTypes
    show: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorStorysponsoredBy {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    href: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorTagbroaderTag {
    alternativeLabels: InputOperatorsForStringTypes
    author: InputOperatorsForStringTypes
    broaderTag: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tagHierarchy: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorTagtagHierarchy {
    alternativeLabels: InputOperatorsForStringTypes
    author: InputOperatorsForStringTypes
    broaderTag: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tagHierarchy: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorTeamProfilebackdropMedia {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    credits: InputOperatorsForStringTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    imageEssence: InputOperatorsForObjectTypes
    imageEssenceContainsCaption: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorTeamProfilelocationBasedIn {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    legacyContentId: InputOperatorsForStringTypes
    location: InputOperatorsForObjectTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    subHeading: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorTrailerVideoextraFor {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    episodeNumber: InputOperatorsForIntegerTypes
    episodes: InputOperatorsForObjectTypes
    eventDescription: InputOperatorsForObjectTypes
    eventDetails: InputOperatorsForObjectTypes
    eventTimeTable: InputOperatorsForObjectTypes
    extras: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isHostedByRedBull: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    live: InputOperatorsForObjectTypes
    livePrimary: InputOperatorsForObjectTypes
    liveStatus: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    noEmbedding: InputOperatorsForBooleanTypes
    participatingPersons: InputOperatorsForObjectTypes
    participatingTeams: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    playabilityEnd: InputOperatorsForObjectTypes
    playabilityStart: InputOperatorsForObjectTypes
    pressAndMedia: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    rbtvLiveStreamId: InputOperatorsForStringTypes
    recap: InputOperatorsForObjectTypes
    relatedContentContainers: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    results: InputOperatorsForObjectTypes
    rules: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    seasonNumber: InputOperatorsForIntegerTypes
    seasons: InputOperatorsForObjectTypes
    series: InputOperatorsForObjectTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    statusMessage: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subPages: InputOperatorsForObjectTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
    website: InputOperatorsForObjectTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorVideoChannelincludeContentTaggedWith {
    alternativeLabels: InputOperatorsForStringTypes
    author: InputOperatorsForStringTypes
    broaderTag: InputOperatorsForObjectTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    socialMediaImage: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subType: InputOperatorsForStringTypes
    tagHierarchy: InputOperatorsForObjectTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
}

"Valid filter operations on resource"
input ContentResourceFilterOperatorVideoextraFor {
    author: InputOperatorsForStringTypes
    callToActions: InputOperatorsForObjectTypes
    contentClassificationTerms: InputOperatorsForStringTypes
    contentCollections: InputOperatorsForObjectTypes
    contextualTitle: InputOperatorsForObjectTypes
    customProperties: InputOperatorsForObjectTypes
    description: InputOperatorsForObjectTypes
    displayTags: InputOperatorsForObjectTypes
    editorialLastUpdatedDate: InputOperatorsForObjectTypes
    embeddedResources: InputOperatorsForObjectTypes
    endDate: InputOperatorsForObjectTypes
    episodeNumber: InputOperatorsForIntegerTypes
    episodes: InputOperatorsForObjectTypes
    eventDescription: InputOperatorsForObjectTypes
    eventDetails: InputOperatorsForObjectTypes
    eventTimeTable: InputOperatorsForObjectTypes
    extras: InputOperatorsForObjectTypes
    featuredMedia: InputOperatorsForObjectTypes
    geoBlockedIn: InputOperatorsForStringTypes
    headerMedia: InputOperatorsForObjectTypes
    isEuropeanWork: InputOperatorsForBooleanTypes
    isHostedByRedBull: InputOperatorsForBooleanTypes
    isPlaceholder: InputOperatorsForBooleanTypes
    label: InputOperatorsForStringTypes
    legacyContentId: InputOperatorsForStringTypes
    live: InputOperatorsForObjectTypes
    livePrimary: InputOperatorsForObjectTypes
    liveStatus: InputOperatorsForStringTypes
    locations: InputOperatorsForObjectTypes
    logo: InputOperatorsForObjectTypes
    master: InputOperatorsForObjectTypes
    noEmbedding: InputOperatorsForBooleanTypes
    participatingPersons: InputOperatorsForObjectTypes
    participatingTeams: InputOperatorsForObjectTypes
    partners: InputOperatorsForObjectTypes
    planningClassification: InputOperatorsForStringTypes
    playabilityEnd: InputOperatorsForObjectTypes
    playabilityStart: InputOperatorsForObjectTypes
    pressAndMedia: InputOperatorsForObjectTypes
    pseudoGroups: InputOperatorsForObjectTypes
    publishedDate: InputOperatorsForObjectTypes
    rbtvLiveStreamId: InputOperatorsForStringTypes
    recap: InputOperatorsForObjectTypes
    relatedContentContainers: InputOperatorsForObjectTypes
    relatedContents: InputOperatorsForObjectTypes
    results: InputOperatorsForObjectTypes
    rules: InputOperatorsForObjectTypes
    searchTerms: InputOperatorsForStringTypes
    season: InputOperatorsForObjectTypes
    seasonNumber: InputOperatorsForIntegerTypes
    seasons: InputOperatorsForObjectTypes
    series: InputOperatorsForObjectTypes
    socialLinks: InputOperatorsForObjectTypes
    socialMediaImage: InputOperatorsForObjectTypes
    socialWall: InputOperatorsForObjectTypes
    sponsoredBy: InputOperatorsForObjectTypes
    startDate: InputOperatorsForObjectTypes
    status: InputOperatorsForStringTypes
    statusMessage: InputOperatorsForStringTypes
    subHeading: InputOperatorsForObjectTypes
    subPages: InputOperatorsForObjectTypes
    subtitleLanguages: InputOperatorsForStringTypes
    tags: InputOperatorsForObjectTypes
    teaser: InputOperatorsForObjectTypes
    title: InputOperatorsForObjectTypes
    translatedFrom: InputOperatorsForObjectTypes
    translations: InputOperatorsForObjectTypes
    type: OperatorsForContentType
    uriSlug: InputOperatorsForStringTypes
    url: InputOperatorsForObjectTypes
    usageRestrictions: InputOperatorsForStringTypes
    videoDurationSeconds: InputOperatorsForIntegerTypes
    videoEssence: InputOperatorsForObjectTypes
    videoFrameAspectRatio: InputOperatorsForNumberTypes
    website: InputOperatorsForObjectTypes
}

"Valid featuredFresh scoring function"
input FeaturingRecordFeaturedFreshScoringFunctionOperator {
    "When looking for featuring records, we will only look for records with a `primaryLocale` in the given locale mixing strategy."
    localeMixing: ScoringFunctionOperator
    "Only featuring records with the specified `subType` will be considered"
    subType: ScoringFunctionOperator
}

"Valid featured scoring function"
input FeaturingRecordFeaturedScoringFunctionOperator {
    "Specify the context objects for the `featured` scoring function, multiple context objects are supported"
    contextObject: ScoringFunctionOperator
    "When looking for featuring records, we will only look for records with a `primaryLocale` in the given locale mixing strategy."
    localeMixing: ScoringFunctionOperator
    "Only featuring records with the specified `subType` will be considered"
    subType: ScoringFunctionOperator
}

"Specify the featuring record for scoring function"
input FeaturingRecordForScoringFunction {
    aggregate: FeaturingRecordRelatedToScoringFunctionOperator
    featured: FeaturingRecordFeaturedScoringFunctionOperator
    featuredFresh: FeaturingRecordFeaturedFreshScoringFunctionOperator
    related: FeaturingRecordRelatedToScoringFunctionOperator
}

"Valid related to scoring function"
input FeaturingRecordRelatedToScoringFunctionOperator {
    "specify the context objects for the `related` scoring function, multiple context objects are supported"
    relatedTo: ScoringFunctionOperator
}

"Valid filter operations on feed content resources"
input FeedContentResourceFilterOperator {
    alternativeLabels: MultiOperators
    author: Operators
    autoAssign: Operators
    biography: MultiOperators
    birthDate: Operators
    body: Operators
    brandingHexColorCode: Operators
    callToActions: MultiOperators
    careerStart: Operators
    clipEssence: Operators
    contentCategory: MultiOperators
    contentClassificationTerms: MultiOperators
    contextualTitle: Operators
    credits: Operators
    customProperties: Operators
    description: MultiOperators
    disciplines: MultiOperators
    editorial: Operators
    editorialLastUpdatedDate: Operators
    endDate: Operators
    episodeNumber: Operators
    essence: Operators
    eventDescription: MultiOperators
    eventDetails: Operators
    eventTimeTable: Operators
    facts: MultiOperators
    familyName: Operators
    flavour: Operators
    foundingYear: Operators
    gender: Operators
    geoBlockedIn: MultiOperators
    givenName: Operators
    hosts: MultiOperators
    href: Operators
    imageEssence: Operators
    imageEssenceContainsCaption: Operators
    isEuropeanWork: Operators
    isHostedByRedBull: Operators
    isPlaceholder: Operators
    isPrimary: Operators
    isSponsored: Operators
    label: Operators
    language: Operators
    legacyContentId: Operators
    liveStatus: Operators
    location: Operators
    meta_createdBy: Operators
    meta_dateCreated: Operators
    meta_dateUpdated: Operators
    meta_externalReference: Operators
    meta_foreignKeys: MultiOperators
    meta_language: Operators
    meta_locale: Operators
    meta_published: Operators
    meta_region: Operators
    meta_spaces: MultiOperators
    meta_updatedBy: Operators
    nickName: Operators
    noEmbedding: Operators
    participatedYears: MultiOperators
    planningClassification: MultiOperators
    playabilityEnd: Operators
    playabilityStart: Operators
    productRelatedQuote: Operators
    publishedDate: Operators
    quote: Operators
    rbtvLiveStreamId: Operators
    relatedContentContainers: MultiOperators
    relationships_backdropMedia: MultiOperators
    relationships_broaderTag: Operators
    relationships_contentCollections: MultiOperators
    relationships_displayTags: MultiOperators
    relationships_embeddedResources: MultiOperators
    relationships_episodes: MultiOperators
    relationships_event: Operators
    relationships_events: MultiOperators
    relationships_excludeContentTaggedWith: MultiOperators
    relationships_extraFor: MultiOperators
    relationships_extras: MultiOperators
    relationships_featuredMedia: MultiOperators
    relationships_headerMedia: Operators
    relationships_images: MultiOperators
    relationships_includeContentTaggedWith: MultiOperators
    relationships_live: MultiOperators
    relationships_livePrimary: Operators
    relationships_locationBasedIn: Operators
    relationships_locations: MultiOperators
    relationships_logo: MultiOperators
    relationships_mappedTags: MultiOperators
    relationships_master: Operators
    relationships_members: MultiOperators
    relationships_participatingPersons: MultiOperators
    relationships_participatingTeams: MultiOperators
    relationships_partners: MultiOperators
    relationships_pressAndMedia: Operators
    relationships_preview: Operators
    relationships_productRelatedImage: Operators
    relationships_pseudoGroups: MultiOperators
    relationships_recap: MultiOperators
    relationships_relatedContents: MultiOperators
    relationships_results: Operators
    relationships_rules: Operators
    relationships_season: Operators
    relationships_seasons: MultiOperators
    relationships_series: Operators
    relationships_show: Operators
    relationships_socialMediaImage: Operators
    relationships_sponsoredBy: MultiOperators
    relationships_tagHierarchy: MultiOperators
    relationships_tags: MultiOperators
    relationships_transcript: Operators
    relationships_translatedFrom: Operators
    relationships_translations: MultiOperators
    searchTerms: MultiOperators
    seasonNumber: Operators
    socialLinks: MultiOperators
    socialWall: MultiOperators
    softFacts: Operators
    startDate: Operators
    status: Operators
    statusLabel: Operators
    statusMessage: Operators
    subHeading: Operators
    subPages: MultiOperators
    subType: Operators
    subtitleLanguages: MultiOperators
    teamLeader: Operators
    teaser: Operators
    title: Operators
    trackRecord: Operators
    type: Operators
    uriSlug: Operators
    url: Operators
    usageRestrictions: MultiOperators
    videoDurationSeconds: Operators
    videoEssence: Operators
    videoFrameAspectRatio: Operators
    website: Operators
}

"Specify descending or ascending order."
input FeedSort {
    "Comma separated list of properties by which to sort the results"
    asc: String
    "Comma separated list of properties by which to sort the results"
    desc: String
}

"Input type operators for boolean types"
input InputOperatorsForBooleanTypes {
    eq: Boolean
    exists: Boolean
    not: Boolean
}

"Input type operators for integer types"
input InputOperatorsForIntegerTypes {
    eq: Int
    exists: Boolean
    gt: Int
    gte: Int
    lt: Int
    lte: Int
    not: Int
}

"Input type operators for integer types"
input InputOperatorsForNumberTypes {
    eq: Float
    exists: Boolean
    gt: Float
    gte: Float
    lt: Float
    lte: Float
    not: Float
}

"Input type operators for complex types"
input InputOperatorsForObjectTypes {
    exists: Boolean
}

"Input type operators for string types"
input InputOperatorsForStringTypes {
    eq: [String!]
    exists: Boolean
    gt: String
    gte: String
    lt: String
    lte: String
    not: [String!]
}

"Filter locales by locale, language or region"
input LocalesFilter {
    language: LocalesFilterOperator
    locale: LocalesFilterOperator
    region: LocalesFilterOperator
}

"Valid filter operations on locale"
input LocalesFilterOperator {
    "Resource value equal to specified filter value"
    eq: String!
}

"Input type operators for fields that can have multiple values"
input MultiOperators {
    and: [String]
    eq: [String]
    exists: Boolean
    gt: String
    gte: String
    lt: String
    lte: String
    not: [String]
    or: [String]
}

"Input type operators for fields that can only have one value"
input Operators {
    eq: [String]
    exists: Boolean
    gt: String
    gte: String
    lt: String
    lte: String
    not: [String]
    or: [String]
}

"Input type operators for content type types"
input OperatorsForContentType {
    eq: [String!]
    not: [String!]
}

"Input type operators"
input RBMNResourceTypeFilterOperators {
    eq: RBMNResourceTypes
}

"Filter resources by type. (e.g. sprites)"
input ResourceTypeFilter {
    type: RBMNResourceTypeFilterOperators
}

"Valid scoring function"
input ScoringFunctionOperator {
    eq: String!
}

"Valid filter operations on spreaker audio episode distributions"
input SpreakerAudioEpisodeDistributionFilter {
    platform: InputOperatorsForStringTypes
    status: InputOperatorsForStringTypes
    url: InputOperatorsForStringTypes
}
